<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0328.0755                               -->
<workbook source-build='10.2.1 (10200.17.0328.0755)' source-platform='win' version='10.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Data by country (Worldbankdata)' inline='true' name='federated.0vi23k51316ksi11ep4co1gxwdi7' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='NHLTop100' name='excel-direct.188odr11ux8rur0zt56le1dnwaed'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/rsp09/Downloads/NHLTop100.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.188odr11ux8rur0zt56le1dnwaed' name='Top 100' table='[&apos;Top 100$&apos;]' type='table'>
          <columns gridOrigin='A1:R101:no:A1:R101:0' header='yes' outcome='6'>
            <column datatype='integer' name='Rank' ordinal='0' />
            <column datatype='string' name='Player' ordinal='1' />
            <column datatype='string' name='Team' ordinal='2' />
            <column datatype='string' name='Pos' ordinal='3' />
            <column datatype='string' name='1st NHL Season' ordinal='4' />
            <column datatype='string' name='Last NHL Season' ordinal='5' />
            <column datatype='real' name='GP' ordinal='6' />
            <column datatype='integer' name='G' ordinal='7' />
            <column datatype='integer' name='A' ordinal='8' />
            <column datatype='integer' name='P' ordinal='9' />
            <column datatype='integer' name='+/-' ordinal='10' />
            <column datatype='integer' name='PIM' ordinal='11' />
            <column datatype='integer' name='PP' ordinal='12' />
            <column datatype='integer' name='SH' ordinal='13' />
            <column datatype='integer' name='GW' ordinal='14' />
            <column datatype='integer' name='GT' ordinal='15' />
            <column datatype='integer' name='OT' ordinal='16' />
            <column datatype='integer' name='Shots' ordinal='17' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank]</local-name>
            <parent-name>[Top 100]</parent-name>
            <remote-alias>Rank</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Player</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Player]</local-name>
            <parent-name>[Top 100]</parent-name>
            <remote-alias>Player</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[Top 100]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pos</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Pos]</local-name>
            <parent-name>[Top 100]</parent-name>
            <remote-alias>Pos</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1st NHL Season</remote-name>
            <remote-type>130</remote-type>
            <local-name>[1st NHL Season]</local-name>
            <parent-name>[Top 100]</parent-name>
            <remote-alias>1st NHL Season</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last NHL Season</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Last NHL Season]</local-name>
            <parent-name>[Top 100]</parent-name>
            <remote-alias>Last NHL Season</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GP]</local-name>
            <parent-name>[Top 100]</parent-name>
            <remote-alias>GP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>G</remote-name>
            <remote-type>20</remote-type>
            <local-name>[G]</local-name>
            <parent-name>[Top 100]</parent-name>
            <remote-alias>G</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>A</remote-name>
            <remote-type>20</remote-type>
            <local-name>[A]</local-name>
            <parent-name>[Top 100]</parent-name>
            <remote-alias>A</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>P</remote-name>
            <remote-type>20</remote-type>
            <local-name>[P]</local-name>
            <parent-name>[Top 100]</parent-name>
            <remote-alias>P</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>+/-</remote-name>
            <remote-type>20</remote-type>
            <local-name>[+/-]</local-name>
            <parent-name>[Top 100]</parent-name>
            <remote-alias>+/-</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PIM</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PIM]</local-name>
            <parent-name>[Top 100]</parent-name>
            <remote-alias>PIM</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PP]</local-name>
            <parent-name>[Top 100]</parent-name>
            <remote-alias>PP</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SH</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SH]</local-name>
            <parent-name>[Top 100]</parent-name>
            <remote-alias>SH</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GW</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GW]</local-name>
            <parent-name>[Top 100]</parent-name>
            <remote-alias>GW</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GT]</local-name>
            <parent-name>[Top 100]</parent-name>
            <remote-alias>GT</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OT]</local-name>
            <parent-name>[Top 100]</parent-name>
            <remote-alias>OT</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shots</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Shots]</local-name>
            <parent-name>[Top 100]</parent-name>
            <remote-alias>Shots</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Top 100]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:R101:no:A1:R101:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[+/-]' role='measure' type='quantitative' />
      <column datatype='integer' name='[A]' role='measure' type='quantitative' />
      <column caption='GPG' datatype='real' name='[Calculation_533395084658761729]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([G])/SUM([GP])' />
      </column>
      <column caption='APG' datatype='real' name='[Calculation_533395084659032066]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([A])/SUM([GP])' />
      </column>
      <column caption='PPG' datatype='real' name='[Calculation_533395084659318787]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([P])/SUM([GP])' />
      </column>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[GP]' role='measure' type='quantitative' />
      <column datatype='integer' name='[GT]' role='measure' type='quantitative' />
      <column datatype='integer' name='[GW]' role='measure' type='quantitative' />
      <column datatype='integer' name='[G]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[OT]' role='measure' type='quantitative' />
      <column datatype='integer' name='[PIM]' role='measure' type='quantitative' />
      <column datatype='integer' name='[PP]' role='measure' type='quantitative' />
      <column datatype='integer' name='[P]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
      <column datatype='integer' name='[SH]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Shots]' role='measure' type='quantitative' />
      <column-instance column='[+/-]' derivation='Sum' name='[sum:+/-:qk]' pivot='key' type='quantitative' />
      <column-instance column='[A]' derivation='Sum' name='[sum:A:qk]' pivot='key' type='quantitative' />
      <column-instance column='[G]' derivation='Sum' name='[sum:G:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GP]' derivation='Sum' name='[sum:GP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GT]' derivation='Sum' name='[sum:GT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GW]' derivation='Sum' name='[sum:GW:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OT]' derivation='Sum' name='[sum:OT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[P]' derivation='Sum' name='[sum:P:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PIM]' derivation='Sum' name='[sum:PIM:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PP]' derivation='Sum' name='[sum:PP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Rank]' derivation='Sum' name='[sum:Rank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SH]' derivation='Sum' name='[sum:SH:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Shots]' derivation='Sum' name='[sum:Shots:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_533395084658761729]' derivation='User' name='[usr:Calculation_533395084658761729:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_533395084659032066]' derivation='User' name='[usr:Calculation_533395084659032066:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_533395084659318787]' derivation='User' name='[usr:Calculation_533395084659318787:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.325726' measure-ordering='alphabetic' measure-percentage='0.674274' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:+/-:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:GP:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:PP:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:OT:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0vi23k51316ksi11ep4co1gxwdi7].[usr:Calculation_533395084658761729:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:A:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:Shots:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:GT:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0vi23k51316ksi11ep4co1gxwdi7].[usr:Calculation_533395084659318787:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:Rank:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:P:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:GW:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0vi23k51316ksi11ep4co1gxwdi7].[usr:Calculation_533395084659032066:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:SH:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:PIM:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Centers'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata)' name='federated.0vi23k51316ksi11ep4co1gxwdi7' />
          </datasources>
          <datasource-dependencies datasource='federated.0vi23k51316ksi11ep4co1gxwdi7'>
            <column datatype='integer' name='[+/-]' role='measure' type='quantitative' />
            <column datatype='integer' name='[A]' role='measure' type='quantitative' />
            <column caption='GPG' datatype='real' name='[Calculation_533395084658761729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([G])/SUM([GP])' />
            </column>
            <column caption='APG' datatype='real' name='[Calculation_533395084659032066]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([A])/SUM([GP])' />
            </column>
            <column caption='PPG' datatype='real' name='[Calculation_533395084659318787]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([P])/SUM([GP])' />
            </column>
            <column datatype='real' name='[GP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[GT]' role='measure' type='quantitative' />
            <column datatype='integer' name='[GW]' role='measure' type='quantitative' />
            <column datatype='integer' name='[G]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='integer' name='[OT]' role='measure' type='quantitative' />
            <column datatype='integer' name='[PIM]' role='measure' type='quantitative' />
            <column datatype='integer' name='[PP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[P]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column datatype='string' name='[Pos]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
            <column datatype='integer' name='[SH]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Shots]' role='measure' type='quantitative' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pos]' derivation='None' name='[none:Pos:nk]' pivot='key' type='nominal' />
            <column-instance column='[+/-]' derivation='Sum' name='[sum:+/-:qk]' pivot='key' type='quantitative' />
            <column-instance column='[A]' derivation='Sum' name='[sum:A:qk]' pivot='key' type='quantitative' />
            <column-instance column='[G]' derivation='Sum' name='[sum:G:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GP]' derivation='Sum' name='[sum:GP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GT]' derivation='Sum' name='[sum:GT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GW]' derivation='Sum' name='[sum:GW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OT]' derivation='Sum' name='[sum:OT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[P]' derivation='Sum' name='[sum:P:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PIM]' derivation='Sum' name='[sum:PIM:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PP]' derivation='Sum' name='[sum:PP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rank]' derivation='Sum' name='[sum:Rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SH]' derivation='Sum' name='[sum:SH:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Shots]' derivation='Sum' name='[sum:Shots:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_533395084658761729]' derivation='User' name='[usr:Calculation_533395084658761729:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_533395084659032066]' derivation='User' name='[usr:Calculation_533395084659032066:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_533395084659318787]' derivation='User' name='[usr:Calculation_533395084659318787:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <sort class='natural' column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Player:nk]' direction='DESC' />
          <filter class='categorical' column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Pos:nk]'>
            <groupfilter function='member' level='[none:Pos:nk]' member='&quot;C&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Pos:nk]</column>
            <column>[federated.0vi23k51316ksi11ep4co1gxwdi7].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:A:qk]' field-type='quantitative' max='2114' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:A:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:A:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]' field-type='quantitative' max='963' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:GP:qk]' palette='tableau-orange-light' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='selection' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' x-axis-name='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[:Measure Names]' />
              <size column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:P:qk]' />
              <text column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Player:nk]' />
              <lod column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Player:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='selection' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[federated.0vi23k51316ksi11ep4co1gxwdi7].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[usr:Calculation_533395084658761729:qk]' />
              <lod column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[usr:Calculation_533395084659032066:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='selection' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Player:nk] * [federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:A:qk])</rows>
        <cols>([federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk] + [federated.0vi23k51316ksi11ep4co1gxwdi7].[Multiple Values])</cols>
      </table>
    </worksheet>
    <worksheet name='Defensemens'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata)' name='federated.0vi23k51316ksi11ep4co1gxwdi7' />
          </datasources>
          <datasource-dependencies datasource='federated.0vi23k51316ksi11ep4co1gxwdi7'>
            <column datatype='integer' name='[A]' role='measure' type='quantitative' />
            <column datatype='real' name='[GP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[G]' role='measure' type='quantitative' />
            <column datatype='integer' name='[P]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column datatype='string' name='[Pos]' role='dimension' type='nominal' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pos]' derivation='None' name='[none:Pos:nk]' pivot='key' type='nominal' />
            <column-instance column='[A]' derivation='Sum' name='[sum:A:qk]' pivot='key' type='quantitative' />
            <column-instance column='[G]' derivation='Sum' name='[sum:G:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GP]' derivation='Sum' name='[sum:GP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[P]' derivation='Sum' name='[sum:P:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Pos:nk]'>
            <groupfilter function='member' level='[none:Pos:nk]' member='&quot;D&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Pos:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:A:qk]' field-type='quantitative' max='2114' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:A:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:A:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]' field-type='quantitative' max='963' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:GP:qk]' palette='tableau-orange-light' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:GP:qk]' />
              <size column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:P:qk]' />
              <text column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Player:nk]' />
              <lod column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Player:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='selection' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:A:qk]</rows>
        <cols>[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GAGPG'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata)' name='federated.0vi23k51316ksi11ep4co1gxwdi7' />
          </datasources>
          <datasource-dependencies datasource='federated.0vi23k51316ksi11ep4co1gxwdi7'>
            <column datatype='integer' name='[A]' role='measure' type='quantitative' />
            <column datatype='real' name='[GP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[G]' role='measure' type='quantitative' />
            <column datatype='integer' name='[P]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[A]' derivation='Sum' name='[sum:A:qk]' pivot='key' type='quantitative' />
            <column-instance column='[G]' derivation='Sum' name='[sum:G:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GP]' derivation='Sum' name='[sum:GP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[P]' derivation='Sum' name='[sum:P:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:A:qk]' field-type='quantitative' max='2114' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:A:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:A:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]' field-type='quantitative' max='963' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:GP:qk]' palette='tableau-orange-light' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:GP:qk]' />
              <size column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:P:qk]' />
              <text column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Player:nk]' />
              <lod column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Player:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='selection' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:A:qk]</rows>
        <cols>[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Left Wingers'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata)' name='federated.0vi23k51316ksi11ep4co1gxwdi7' />
          </datasources>
          <datasource-dependencies datasource='federated.0vi23k51316ksi11ep4co1gxwdi7'>
            <column datatype='integer' name='[A]' role='measure' type='quantitative' />
            <column datatype='real' name='[GP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[G]' role='measure' type='quantitative' />
            <column datatype='integer' name='[P]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column datatype='string' name='[Pos]' role='dimension' type='nominal' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pos]' derivation='None' name='[none:Pos:nk]' pivot='key' type='nominal' />
            <column-instance column='[A]' derivation='Sum' name='[sum:A:qk]' pivot='key' type='quantitative' />
            <column-instance column='[G]' derivation='Sum' name='[sum:G:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GP]' derivation='Sum' name='[sum:GP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[P]' derivation='Sum' name='[sum:P:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Pos:nk]'>
            <groupfilter function='member' level='[none:Pos:nk]' member='&quot;L&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Pos:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:A:qk]' field-type='quantitative' max='2114' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:A:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:A:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]' field-type='quantitative' max='963' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:GP:qk]' palette='tableau-orange-light' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:GP:qk]' />
              <size column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:P:qk]' />
              <text column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Player:nk]' />
              <lod column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Player:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='selection' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:A:qk]</rows>
        <cols>[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Right Wingers'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata)' name='federated.0vi23k51316ksi11ep4co1gxwdi7' />
          </datasources>
          <datasource-dependencies datasource='federated.0vi23k51316ksi11ep4co1gxwdi7'>
            <column datatype='integer' name='[A]' role='measure' type='quantitative' />
            <column datatype='real' name='[GP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[G]' role='measure' type='quantitative' />
            <column datatype='integer' name='[P]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column datatype='string' name='[Pos]' role='dimension' type='nominal' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pos]' derivation='None' name='[none:Pos:nk]' pivot='key' type='nominal' />
            <column-instance column='[A]' derivation='Sum' name='[sum:A:qk]' pivot='key' type='quantitative' />
            <column-instance column='[G]' derivation='Sum' name='[sum:G:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GP]' derivation='Sum' name='[sum:GP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[P]' derivation='Sum' name='[sum:P:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Pos:nk]'>
            <groupfilter function='member' level='[none:Pos:nk]' member='&quot;R&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Pos:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:A:qk]' field-type='quantitative' max='2114' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:A:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:A:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]' field-type='quantitative' max='963' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:GP:qk]' palette='tableau-orange-light' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:GP:qk]' />
              <size column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:P:qk]' />
              <text column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Player:nk]' />
              <lod column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Player:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='selection' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:A:qk]</rows>
        <cols>[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata)' name='federated.0vi23k51316ksi11ep4co1gxwdi7' />
          </datasources>
          <datasource-dependencies datasource='federated.0vi23k51316ksi11ep4co1gxwdi7'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Finance: GDP per capita (current US$)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance: GDP per capita (current US$)]' derivation='Sum' name='[sum:Finance: GDP per capita (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:Finance: GDP per capita (current US$):qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[yr:Date:ok]'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2010' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:Finance: GDP per capita (current US$):qk]</column>
            <column>[federated.0vi23k51316ksi11ep4co1gxwdi7].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Country Name:nk]' />
              <text column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:Finance: GDP per capita (current US$):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Country Name:nk]</rows>
        <cols>[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:Finance: GDP per capita (current US$):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata)' name='federated.0vi23k51316ksi11ep4co1gxwdi7' />
          </datasources>
          <datasource-dependencies datasource='federated.0vi23k51316ksi11ep4co1gxwdi7'>
            <column datatype='integer' name='[G]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column datatype='string' name='[Pos]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Shots]' role='measure' type='quantitative' />
            <column-instance column='[Player]' derivation='Attribute' name='[attr:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pos]' derivation='None' name='[none:Pos:nk]' pivot='key' type='nominal' />
            <column-instance column='[G]' derivation='Sum' name='[sum:G:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Shots]' derivation='Sum' name='[sum:Shots:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]' field-type='quantitative' max='22049' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:Shots:qk]' field-type='quantitative' max='119565' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:Shots:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:Shots:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <shape column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Pos:nk]' />
              <lod column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[attr:Player:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='true' exclude-panes='false' fit='linear' />
            <reference-line axis-column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]</rows>
        <cols>[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:Shots:qk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>More</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='21203.645320197043'>
                  <node-reference>
                    <axis>[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:Shots:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='19116.374384236453'>
                  <node-reference>
                    <axis>[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='50653.152709359601'>
                  <node-reference>
                    <axis>[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:Shots:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='13685.586206896553'>
                  <node-reference>
                    <axis>[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='1' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Less&#10;</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='67144.876847290638'>
                  <node-reference>
                    <axis>[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:Shots:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='8852.1847290640399'>
                  <node-reference>
                    <axis>[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='96594.384236453203'>
                  <node-reference>
                    <axis>[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:Shots:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='3421.3965517241372'>
                  <node-reference>
                    <axis>[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Country Name:nk]</field>
            <field>[federated.0vi23k51316ksi11ep4co1gxwdi7].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='GAGPG'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:P:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:GP:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Player:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Centers'>
      <cards>
        <edge name='left'>
          <strip size='258'>
            <card size='0' type='pages' />
            <card size='69' type='filters' />
            <card size='250' type='marks' />
            <card size='126' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Pos:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:P:qk]' type='size' />
            <card pane-specification-id='1' param='[federated.0vi23k51316ksi11ep4co1gxwdi7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vi23k51316ksi11ep4co1gxwdi7].[:Measure Names]</field>
            <field>[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Player:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Defensemens'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Pos:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:P:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:GP:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Player:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Right Wingers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Pos:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:P:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:GP:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Player:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Left Wingers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Pos:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:P:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:GP:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:G:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Player:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Pos:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0vi23k51316ksi11ep4co1gxwdi7].[sum:Shots:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Player:nk]</field>
            <field>[federated.0vi23k51316ksi11ep4co1gxwdi7].[none:Pos:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints />
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Centers' width='192'>
      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
      YjSymkxPiPnf6V40bziSOTwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Defensemens' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='GAGPG' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Left Wingers' width='192'>
      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
      OAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Right Wingers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      V3ol/sDYAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      14HBqeb/A7z864p0ZdMiAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
