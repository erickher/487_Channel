<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0328.0755                               -->
<workbook source-build='10.2.1 (10200.17.0328.0755)' source-platform='win' version='10.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <datasources>
    <datasource caption='Data by country (Worldbankdata)' inline='true' name='excel-direct.42012.939728854166' version='10.2'>
      <connection class='federated' prefer-ind-semantics='true'>
        <named-connections>
          <named-connection caption='Data by country (Worldbankdata)' name='excel-direct.42012.939728854166leaf'>
            <connection class='excel-direct' cleaning='no' compat='no' filename='C:/Users/rsp09/Downloads/Worldbankdata.xlsx' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.42012.939728854166leaf' name='&apos;Data by country$&apos;' table='[&apos;Data by country$&apos;]' type='table'>
          <columns header='yes'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='integer' name='Stock: Listed domestic companies (count)' ordinal='2' />
            <column datatype='integer' name='Stock: Market cap companies (current US$)' ordinal='3' />
            <column datatype='integer' name='Stock: Traded, total value (current US$)' ordinal='4' />
            <column datatype='integer' name='Stock: Market cap of companies (% GDP)' ordinal='5' />
            <column datatype='integer' name='Stock: Traded, total value (% GDP)' ordinal='6' />
            <column datatype='integer' name='Stock: Traded, turnover ratio (%)' ordinal='7' />
            <column datatype='integer' name='Banks: Comm branches (per 100k adults)' ordinal='8' />
            <column datatype='integer' name='Banks: Automated tellers (per 100k adults)' ordinal='9' />
            <column datatype='integer' name='Finance: Consumer price index (2005 = 100)' ordinal='10' />
            <column datatype='integer' name='Finance: Deposit interest rate (%)' ordinal='11' />
            <column datatype='integer' name='Finance: Lending interest rate (%)' ordinal='12' />
            <column datatype='integer' name='Finance: Real interest rate (%)' ordinal='13' />
            <column datatype='integer' name='Business: Start-up proc cost (% GNI per capita)' ordinal='14' />
            <column datatype='integer' name='Business: Cost to export ($ per container)' ordinal='15' />
            <column datatype='integer' name='Business: Cost to import ($ per container)' ordinal='16' />
            <column datatype='integer' name='Business: Ease of biz index (1=easiest)' ordinal='17' />
            <column datatype='integer' name='Business: Start-up procedures (count)' ordinal='18' />
            <column datatype='integer' name='Business: Legal rights (0=weak, 10=strong)' ordinal='19' />
            <column datatype='integer' name='Business: Time to start a business (days)' ordinal='20' />
            <column datatype='integer' name='Business: Time to prep &amp; pay taxes (hours)' ordinal='21' />
            <column datatype='integer' name='Business: Total tax rate (% of commercial profits)' ordinal='22' />
            <column datatype='integer' name='Business: Firing cost (weeks of wages)' ordinal='23' />
            <column datatype='integer' name='R&amp;D: Scientific &amp; tech articles' ordinal='24' />
            <column datatype='integer' name='Transit: Air transport, passengers (count)' ordinal='25' />
            <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='26' />
            <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='27' />
            <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='28' />
            <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='29' />
            <column datatype='integer' name='Military: Armed forces personnel' ordinal='30' />
            <column datatype='real' name='Military: Expenditure (% GDP)' ordinal='31' />
            <column datatype='real' name='Military: Expenditure (% central govt exp)' ordinal='32' />
            <column datatype='integer' name='Business: Exports (% GDP)' ordinal='33' />
            <column datatype='integer' name='Business: Imports (% GDP)' ordinal='34' />
            <column datatype='integer' name='Business: Trade (% GDP)' ordinal='35' />
            <column datatype='integer' name='Business: Exports (current US$)' ordinal='36' />
            <column datatype='integer' name='Business: Imports (current US$)' ordinal='37' />
            <column datatype='integer' name='Finance: GDP (current US$)' ordinal='38' />
            <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='39' />
            <column datatype='integer' name='Finance: Net income from abroad (current LCU)' ordinal='40' />
            <column datatype='integer' name='Government: Seats women in nat parliament (%)' ordinal='41' />
            <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='42' />
            <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='43' />
            <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='44' />
            <column datatype='integer' name='Population: Total (count)' ordinal='45' />
            <column datatype='integer' name='Population: Urban (count)' ordinal='46' />
            <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='47' />
            <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='48' />
            <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='49' />
            <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='50' />
            <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='51' />
            <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='52' />
            <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='53' />
            <column datatype='integer' name='Business: International tourism inc (current US$)' ordinal='54' />
            <column datatype='integer' name='Business: International tourism, exp (current US$)' ordinal='55' />
            <column datatype='integer' name='Measures with values' ordinal='56' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Listed domestic companies (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Listed domestic companies (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Listed domestic companies (count)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Market cap companies (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Market cap companies (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Market cap companies (current US$)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, total value (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, total value (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, total value (current US$)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Market cap of companies (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Market cap of companies (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Market cap of companies (% GDP)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, total value (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, total value (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, total value (% GDP)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, turnover ratio (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, turnover ratio (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, turnover ratio (%)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks: Comm branches (per 100k adults)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Banks: Comm branches (per 100k adults)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Banks: Comm branches (per 100k adults)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks: Automated tellers (per 100k adults)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Banks: Automated tellers (per 100k adults)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Banks: Automated tellers (per 100k adults)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Consumer price index (2005 = 100)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Consumer price index (2005 = 100)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Consumer price index (2005 = 100)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Deposit interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Deposit interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Deposit interest rate (%)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Lending interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Lending interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Lending interest rate (%)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Real interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Real interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Real interest rate (%)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Start-up proc cost (% GNI per capita)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Start-up proc cost (% GNI per capita)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Start-up proc cost (% GNI per capita)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Cost to export ($ per container)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Cost to export ($ per container)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Cost to export ($ per container)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Cost to import ($ per container)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Cost to import ($ per container)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Cost to import ($ per container)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Ease of biz index (1=easiest)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Ease of biz index (1=easiest)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Ease of biz index (1=easiest)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Start-up procedures (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Start-up procedures (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Start-up procedures (count)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Legal rights (0=weak, 10=strong)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Legal rights (0=weak, 10=strong)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Legal rights (0=weak, 10=strong)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Time to start a business (days)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Time to start a business (days)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Time to start a business (days)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Time to prep &amp; pay taxes (hours)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Time to prep &amp; pay taxes (hours)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Time to prep &amp; pay taxes (hours)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Total tax rate (% of commercial profits)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Total tax rate (% of commercial profits)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Total tax rate (% of commercial profits)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Firing cost (weeks of wages)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Firing cost (weeks of wages)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Firing cost (weeks of wages)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>R&amp;D: Scientific &amp; tech articles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[R&amp;D: Scientific &amp; tech articles]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>R&amp;D: Scientific &amp; tech articles</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Air transport, passengers (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Air transport, passengers (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Air transport, passengers (count)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Railways, (million passenger-km)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Railways, (million passenger-km)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Railways, (million passenger-km)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Passenger cars (per 1,000 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Passenger cars (per 1,000 people)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Passenger cars (per 1,000 people)</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Mobile phone subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Mobile phone subscribers]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Mobile phone subscribers</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Internet users (per 100 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Internet users (per 100 people)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Internet users (per 100 people)</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Armed forces personnel</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Military: Armed forces personnel]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Armed forces personnel</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Expenditure (% GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military: Expenditure (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Expenditure (% GDP)</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Expenditure (% central govt exp)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military: Expenditure (% central govt exp)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Expenditure (% central govt exp)</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Exports (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Exports (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Exports (% GDP)</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Imports (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Imports (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Imports (% GDP)</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Trade (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Trade (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Trade (% GDP)</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Exports (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Exports (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Exports (current US$)</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Imports (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Imports (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Imports (current US$)</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: GDP (current US$)</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP per capita (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: GDP per capita (current US$)</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Net income from abroad (current LCU)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Net income from abroad (current LCU)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Net income from abroad (current LCU)</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government: Seats women in nat parliament (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Government: Seats women in nat parliament (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Government: Seats women in nat parliament (%)</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Mortality, under-5 (per 1,000 live births)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Mortality, under-5 (per 1,000 live births)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Mortality, under-5 (per 1,000 live births)</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure per capita (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Health expenditure per capita (current US$)</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure, total (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure, total (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Health expenditure, total (% GDP)</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Total (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Total (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Total (count)</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Urban (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Urban (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Urban (count)</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population:: Birth rate, crude (per 1,000)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population:: Birth rate, crude (per 1,000)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population:: Birth rate, crude (per 1,000)</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, female (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, female (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, female (years)</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, male (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, male (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, male (years)</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, total (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, total (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, total (years)</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 0-14 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 0-14 (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 0-14 (% of total)</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 15-64 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 15-64 (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 15-64 (% of total)</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 65+ (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 65+ (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 65+ (% of total)</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: International tourism inc (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: International tourism inc (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: International tourism inc (current US$)</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: International tourism, exp (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: International tourism, exp (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: International tourism, exp (current US$)</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measures with values</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Measures with values]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Measures with values</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.189759' measure-ordering='alphabetic' measure-percentage='0.810241' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Data by country (Worldbankdata) (2)' inline='true' name='excel-direct.42012.950994398147' version='10.2'>
      <connection class='federated' prefer-ind-semantics='true'>
        <named-connections>
          <named-connection caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147leaf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/rsp09/Downloads/Worldbankdata.xlsx' interpretationMode='0' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.42012.950994398147leaf' name='&apos;Data by country$&apos;' table='[&apos;Data by country$&apos;]' type='table'>
          <columns gridOrigin='A1:BE2355:no:A1:BE2355:0' header='yes' outcome='2'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='integer' name='Stock: Listed domestic companies (count)' ordinal='2' />
            <column datatype='integer' name='Stock: Market cap companies (current US$)' ordinal='3' />
            <column datatype='integer' name='Stock: Traded, total value (current US$)' ordinal='4' />
            <column datatype='integer' name='Stock: Market cap of companies (% GDP)' ordinal='5' />
            <column datatype='integer' name='Stock: Traded, total value (% GDP)' ordinal='6' />
            <column datatype='integer' name='Stock: Traded, turnover ratio (%)' ordinal='7' />
            <column datatype='integer' name='Banks: Comm branches (per 100k adults)' ordinal='8' />
            <column datatype='integer' name='Banks: Automated tellers (per 100k adults)' ordinal='9' />
            <column datatype='integer' name='Finance: Consumer price index (2005 = 100)' ordinal='10' />
            <column datatype='integer' name='Finance: Deposit interest rate (%)' ordinal='11' />
            <column datatype='integer' name='Finance: Lending interest rate (%)' ordinal='12' />
            <column datatype='integer' name='Finance: Real interest rate (%)' ordinal='13' />
            <column datatype='integer' name='Business: Start-up proc cost (% GNI per capita)' ordinal='14' />
            <column datatype='integer' name='Business: Cost to export ($ per container)' ordinal='15' />
            <column datatype='integer' name='Business: Cost to import ($ per container)' ordinal='16' />
            <column datatype='integer' name='Business: Ease of biz index (1=easiest)' ordinal='17' />
            <column datatype='integer' name='Business: Start-up procedures (count)' ordinal='18' />
            <column datatype='integer' name='Business: Legal rights (0=weak, 10=strong)' ordinal='19' />
            <column datatype='integer' name='Business: Time to start a business (days)' ordinal='20' />
            <column datatype='integer' name='Business: Time to prep &amp; pay taxes (hours)' ordinal='21' />
            <column datatype='integer' name='Business: Total tax rate (% of commercial profits)' ordinal='22' />
            <column datatype='integer' name='Business: Firing cost (weeks of wages)' ordinal='23' />
            <column datatype='integer' name='R&amp;D: Scientific &amp; tech articles' ordinal='24' />
            <column datatype='integer' name='Transit: Air transport, passengers (count)' ordinal='25' />
            <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='26' />
            <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='27' />
            <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='28' />
            <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='29' />
            <column datatype='integer' name='Military: Armed forces personnel' ordinal='30' />
            <column datatype='real' name='Military: Expenditure (% GDP)' ordinal='31' />
            <column datatype='real' name='Military: Expenditure (% central govt exp)' ordinal='32' />
            <column datatype='integer' name='Business: Exports (% GDP)' ordinal='33' />
            <column datatype='integer' name='Business: Imports (% GDP)' ordinal='34' />
            <column datatype='integer' name='Business: Trade (% GDP)' ordinal='35' />
            <column datatype='integer' name='Business: Exports (current US$)' ordinal='36' />
            <column datatype='integer' name='Business: Imports (current US$)' ordinal='37' />
            <column datatype='integer' name='Finance: GDP (current US$)' ordinal='38' />
            <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='39' />
            <column datatype='integer' name='Finance: Net income from abroad (current LCU)' ordinal='40' />
            <column datatype='integer' name='Government: Seats women in nat parliament (%)' ordinal='41' />
            <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='42' />
            <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='43' />
            <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='44' />
            <column datatype='integer' name='Population: Total (count)' ordinal='45' />
            <column datatype='integer' name='Population: Urban (count)' ordinal='46' />
            <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='47' />
            <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='48' />
            <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='49' />
            <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='50' />
            <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='51' />
            <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='52' />
            <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='53' />
            <column datatype='integer' name='Business: International tourism inc (current US$)' ordinal='54' />
            <column datatype='integer' name='Business: International tourism, exp (current US$)' ordinal='55' />
            <column datatype='integer' name='Measures with values' ordinal='56' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Listed domestic companies (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Listed domestic companies (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Listed domestic companies (count)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Market cap companies (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Market cap companies (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Market cap companies (current US$)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, total value (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, total value (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, total value (current US$)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Market cap of companies (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Market cap of companies (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Market cap of companies (% GDP)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, total value (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, total value (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, total value (% GDP)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, turnover ratio (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, turnover ratio (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, turnover ratio (%)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks: Comm branches (per 100k adults)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Banks: Comm branches (per 100k adults)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Banks: Comm branches (per 100k adults)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks: Automated tellers (per 100k adults)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Banks: Automated tellers (per 100k adults)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Banks: Automated tellers (per 100k adults)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Consumer price index (2005 = 100)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Consumer price index (2005 = 100)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Consumer price index (2005 = 100)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Deposit interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Deposit interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Deposit interest rate (%)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Lending interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Lending interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Lending interest rate (%)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Real interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Real interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Real interest rate (%)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Start-up proc cost (% GNI per capita)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Start-up proc cost (% GNI per capita)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Start-up proc cost (% GNI per capita)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Cost to export ($ per container)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Cost to export ($ per container)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Cost to export ($ per container)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Cost to import ($ per container)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Cost to import ($ per container)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Cost to import ($ per container)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Ease of biz index (1=easiest)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Ease of biz index (1=easiest)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Ease of biz index (1=easiest)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Start-up procedures (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Start-up procedures (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Start-up procedures (count)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Legal rights (0=weak, 10=strong)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Legal rights (0=weak, 10=strong)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Legal rights (0=weak, 10=strong)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Time to start a business (days)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Time to start a business (days)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Time to start a business (days)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Time to prep &amp; pay taxes (hours)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Time to prep &amp; pay taxes (hours)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Time to prep &amp; pay taxes (hours)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Total tax rate (% of commercial profits)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Total tax rate (% of commercial profits)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Total tax rate (% of commercial profits)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Firing cost (weeks of wages)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Firing cost (weeks of wages)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Firing cost (weeks of wages)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>R&amp;D: Scientific &amp; tech articles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[R&amp;D: Scientific &amp; tech articles]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>R&amp;D: Scientific &amp; tech articles</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Air transport, passengers (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Air transport, passengers (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Air transport, passengers (count)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Railways, (million passenger-km)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Railways, (million passenger-km)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Railways, (million passenger-km)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Passenger cars (per 1,000 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Passenger cars (per 1,000 people)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Passenger cars (per 1,000 people)</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Mobile phone subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Mobile phone subscribers]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Mobile phone subscribers</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Internet users (per 100 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Internet users (per 100 people)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Internet users (per 100 people)</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Armed forces personnel</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Military: Armed forces personnel]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Armed forces personnel</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Expenditure (% GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military: Expenditure (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Expenditure (% GDP)</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Expenditure (% central govt exp)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military: Expenditure (% central govt exp)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Expenditure (% central govt exp)</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Exports (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Exports (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Exports (% GDP)</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Imports (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Imports (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Imports (% GDP)</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Trade (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Trade (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Trade (% GDP)</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Exports (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Exports (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Exports (current US$)</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Imports (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Imports (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Imports (current US$)</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: GDP (current US$)</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP per capita (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: GDP per capita (current US$)</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Net income from abroad (current LCU)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Net income from abroad (current LCU)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Net income from abroad (current LCU)</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government: Seats women in nat parliament (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Government: Seats women in nat parliament (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Government: Seats women in nat parliament (%)</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Mortality, under-5 (per 1,000 live births)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Mortality, under-5 (per 1,000 live births)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Mortality, under-5 (per 1,000 live births)</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure per capita (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Health expenditure per capita (current US$)</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure, total (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure, total (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Health expenditure, total (% GDP)</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Total (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Total (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Total (count)</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Urban (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Urban (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Urban (count)</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population:: Birth rate, crude (per 1,000)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population:: Birth rate, crude (per 1,000)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population:: Birth rate, crude (per 1,000)</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, female (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, female (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, female (years)</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, male (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, male (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, male (years)</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, total (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, total (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, total (years)</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 0-14 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 0-14 (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 0-14 (% of total)</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 15-64 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 15-64 (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 15-64 (% of total)</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 65+ (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 65+ (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 65+ (% of total)</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: International tourism inc (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: International tourism inc (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: International tourism inc (current US$)</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: International tourism, exp (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: International tourism, exp (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: International tourism, exp (current US$)</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measures with values</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Measures with values]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Measures with values</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:BE2355:no:A1:BE2355:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.189759' measure-ordering='alphabetic' measure-percentage='0.810241' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country Name:nk]' palette='tableau-20' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Korea, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Macedonia, FYR&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='GDP'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Finance: GDP (current US$)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance: GDP (current US$)]' derivation='Sum' name='[sum:Finance: GDP (current US$):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42012.950994398147].[none:Country Name:nk]'>
            <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]' included-values='non-null' />
          <slices>
            <column>[excel-direct.42012.950994398147].[none:Country Name:nk]</column>
            <column>[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='499' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]' />
              <text column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='GDPPerCapita'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Finance: GDP per capita (current US$)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance: GDP per capita (current US$)]' derivation='Sum' name='[sum:Finance: GDP per capita (current US$):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[excel-direct.42012.950994398147].[Latitude (generated)]</column>
            <column>[excel-direct.42012.950994398147].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]' include-totals='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
            <format attr='break-on-special' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
            <format attr='show-null-value-warning' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-pattern-only' value='dashed' />
            <format attr='line-visibility' value='on' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
              <color column='[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]' />
              <geometry column='[excel-direct.42012.950994398147].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42012.950994398147].[Latitude (generated)]</rows>
        <cols>[excel-direct.42012.950994398147].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='GDPYear'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Finance: GDP (current US$)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='Attribute' name='[attr:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance: GDP (current US$)]' derivation='Sum' name='[sum:Finance: GDP (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year-Trunc' name='[tyr:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]' included-values='non-null' />
          <slices>
            <column>[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
              <tooltip column='[excel-direct.42012.950994398147].[attr:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]</rows>
        <cols>[excel-direct.42012.950994398147].[tyr:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Population'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population: Total (count)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='Attribute' name='[attr:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population: Total (count)]' derivation='Sum' name='[sum:Population: Total (count):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
              <size column='[excel-direct.42012.950994398147].[sum:Population: Total (count):qk]' />
              <lod column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
              <tooltip column='[excel-direct.42012.950994398147].[attr:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42012.950994398147].[Latitude (generated)]</rows>
        <cols>[excel-direct.42012.950994398147].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='PopulationAge'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population: Ages 0-14 (% of total)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population: Ages 15-64 (% of total)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population: Ages 65+ (% of total)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population: Ages 0-14 (% of total)]' derivation='Sum' name='[sum:Population: Ages 0-14 (% of total):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population: Ages 15-64 (% of total)]' derivation='Sum' name='[sum:Population: Ages 15-64 (% of total):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population: Ages 65+ (% of total)]' derivation='Sum' name='[sum:Population: Ages 65+ (% of total):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42012.950994398147].[none:Country Name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country Name:nk]' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Aruba&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[sum:Population: Ages 0-14 (% of total):qk]' included-values='non-null' />
          <slices>
            <column>[excel-direct.42012.950994398147].[sum:Population: Ages 0-14 (% of total):qk]</column>
            <column>[excel-direct.42012.950994398147].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
          </pane>
          <pane id='1' x-axis-name='[excel-direct.42012.950994398147].[sum:Population: Ages 0-14 (% of total):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
          </pane>
          <pane id='2' x-axis-name='[excel-direct.42012.950994398147].[sum:Population: Ages 15-64 (% of total):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
          </pane>
          <pane id='3' x-axis-name='[excel-direct.42012.950994398147].[sum:Population: Ages 65+ (% of total):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42012.950994398147].[none:Country Name:nk]</rows>
        <cols>([excel-direct.42012.950994398147].[sum:Population: Ages 0-14 (% of total):qk] + ([excel-direct.42012.950994398147].[sum:Population: Ages 15-64 (% of total):qk] + [excel-direct.42012.950994398147].[sum:Population: Ages 65+ (% of total):qk]))</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='World GDP/Population Show' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4461' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11307' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4461' />
            <zone h='83817' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15768'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='GDP' captured-sheet='GDPYear' id='1' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='WorldData' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>World GDP Data</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='965' maxwidth='1016' minheight='965' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4561' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11296' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4561' />
            <zone h='83728' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15857'>
              <flipboard active-id='6' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='World Population' captured-sheet='Population' id='3'>
                    <capturedDeltas>
                      <worksheet name='Population'>
                        <filter class='quantitative' column='[excel-direct.42012.950994398147].[Latitude (generated)]' included-values='non-null' />
                        <filter class='quantitative' column='[excel-direct.42012.950994398147].[Longitude (generated)]' included-values='non-null' />
                        <style delta-type='added'>
                          <style-rule element='table'>
                            <format attr='break-on-special' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
                            <format attr='omit-on-special' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
                            <format attr='show-null-value-warning' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='GDP and GDPper capita' captured-sheet='WorldGDPDashboard' id='4'>
                    <capturedDeltas>
                      <worksheet name='GDPPerCapita'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[excel-direct.42012.950994398147].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[excel-direct.42012.950994398147].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
                                  <field>[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]</field>
                                  <field>[excel-direct.42012.950994398147].[Geometry (generated)]</field>
                                  <field>[excel-direct.42012.950994398147].[Latitude (generated)]</field>
                                  <field>[excel-direct.42012.950994398147].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;China&quot;</value>
                                <value>23937</value>
                                <value>&quot;MULTIPOLYGON (((110.6906 20.1494,110.784 20.0176,110.9323 20.0176,111.0367 19.6386,110.9763 19.6386,110.8609 19.5232,110.806 19.5287,110.762 19.4243,110.6741 19.3859,110.5698 19.1332,110.5698 19.0508,110.5148 18.9903,110.5203 18.7871,110.4654 18.7706,110.4105 18.6607,110.2621 18.6662,110.1083 18.5399,110.0149 18.4135,109.7677 18.3971,109.7183 18.2982,109.7458 18.2542,109.57 18.2103,109.4546 18.2817,109.3118 18.3092,109.18 18.2872,109.1031 18.3641,108.9877 18.3586,108.8284 18.463,108.6856 18.5069,108.6911 18.7376,108.6196 18.8255,108.6581 18.9409,108.6141 19.1002,108.6746 19.1716,108.6306 19.2156,108.6856 19.3749,108.8723 19.4628,109.0042 19.5836,109.18 19.655,109.2074 19.721,109.158 19.7924,109.2624 19.9022,109.3173 19.9187,109.4052 19.8638,109.5205 19.8528,109.5151 19.9132,109.581 19.9846,109.7128 20.0121,109.8666 19.9407,109.938 19.9956,110.0095 19.9297,110.1193 20.0011,110.1578 20.067,110.2567 20.0341,110.3775 20.078,110.5753 20.0231,110.5698 20.0945,110.6906 20.1494)),((110.4215 21.0833,110.5533 21.0503,110.5039 20.9734,110.3555 20.9954,110.3116 21.0778,110.4215 21.0833)),((121.9574 30.1803,122.1003 30.1583,122.2266 30.1033,122.331 30.0209,122.32 29.9495,122.1662 29.9935,122.0289 29.9935,121.9739 30.0594,121.9574 30.1803)),((119.7711 25.6428,119.848 25.5494,119.837 25.4725,119.7052 25.434,119.7272 25.5219,119.6832 25.5988,119.7711 25.6428)),((121.4795 39.6508,121.5345 39.5739,121.4301 39.5079,121.3422 39.5244,121.3202 39.5903,121.4795 39.6508)),((114.227 22.5477,114.218 22.556,114.2088 22.5574,114.1865 22.5547,114.1778 22.5557,114.176 22.5602,114.1601 22.5614,114.1525 22.5551,114.1486 22.5422,114.1294 22.5422,114.1161 22.535,114.1125 22.5297,114.1072 22.5345,114.0969 22.5339,114.0914 22.5375,114.0784 22.5299,114.0849 22.5218,114.0787 22.5155,114.0727 22.5181,114.0603 22.5135,114.0557 22.5028,114.0392 22.5038,114.0265 22.5219,114.0151 22.523,114.0013 22.5269,113.9042 22.5335,113.7779 22.6819,113.7614 22.7533,113.668 22.7423,113.6131 22.8027,113.5856 22.9236,113.4922 22.9455,113.5252 22.8357,113.6131 22.7588,113.5691 22.7423,113.6021 22.6324,113.5527 22.572,113.5691 22.4896,113.5307 22.4017,113.6021 22.3687,113.5856 22.2424,113.5501 22.2222,113.5374 22.2222,113.5292 22.2165,113.5226 22.2274,113.5142 22.2362,113.528 22.1981,113.5168 22.1777,113.4593 22.1655,113.3384 22.193,113.2231 22.0336,113.1132 22.0721,113.1187 22.1875,113.0857 22.2039,113.0033 22.116,113.0308 21.9458,112.9099 21.8524,112.8385 21.9732,112.7451 21.9238,112.6408 21.781,112.5584 21.759,112.4155 21.8414,112.3991 21.737,112.2343 21.704,112.1738 21.8084,112.0145 21.7864,111.8937 21.6766,111.8277 21.6986,111.8442 21.7645,111.7728 21.7864,111.7618 21.6271,111.652 21.5283,111.597 21.5502,111.4817 21.5063,111.4322 21.5502,111.2729 21.4184,111.229 21.4843,111.0752 21.4623,110.8939 21.3854,110.7511 21.3854,110.6302 21.2261,110.4874 21.2206,110.3665 21.0998,110.2072 21.0394,110.1688 20.924,110.2017 20.8471,110.3226 20.8526,110.394 20.7922,110.3281 20.6823,110.405 20.5944,110.4709 20.5834,110.5368 20.479,110.4434 20.3307,110.3061 20.2593,110.1962 20.2758,110.1248 20.2428,110.0644 20.2923,109.938 20.2923,110.0149 20.4516,109.8337 20.5065,109.8337 20.5724,109.7403 20.6658,109.7787 20.7043,109.7623 20.8086,109.7018 20.8306,109.6689 20.9405,109.7128 21.0613,109.6744 21.1108,109.7732 21.2316,109.7677 21.336,109.9161 21.3635,109.9106 21.4733,109.8062 21.5063,109.7458 21.5832,109.7787 21.4898,109.6579 21.5173,109.6744 21.5997,109.5865 21.5832,109.5425 21.5008,109.4381 21.4568,109.158 21.4074,109.0481 21.4623,109.169 21.5283,109.1525 21.5832,108.9602 21.5997,108.7899 21.6436,108.746 21.6052,108.6856 21.704,108.6141 21.715,108.5592 21.7919,108.6141 21.8469,108.5482 21.8908,108.4878 21.8359,108.5757 21.6931,108.4768 21.5612,108.3944 21.5557,108.3669 21.6546,108.3175 21.6766,108.323 21.5887,108.1692 21.6052,108.1362 21.5447,107.9989 21.5447,107.9604 21.5447,107.878 21.6491,107.8231 21.6601,107.6693 21.6052,107.499 21.6162,107.488 21.6601,107.3672 21.6107,107.3067 21.7425,107.2353 21.704,107.087 21.8139,107.0266 21.8249,107.0595 21.9238,106.9991 21.9567,106.8068 21.9787,106.708 22.0282,106.6805 22.182,106.6915 22.2808,106.6585 22.3358,106.5761 22.3413,106.5651 22.4127,106.5926 22.5445,106.7189 22.6104,106.8288 22.8027,106.6585 22.8686,106.6036 22.9291,106.3234 22.8631,106.2191 22.9895,106.0103 22.995,105.9993 22.94,105.884 22.9181,105.7247 23.0664,105.5763 23.0939,105.5324 23.2037,105.439 23.3081,105.4115 23.2916,105.3291 23.3905,105.2193 23.2751,105.0819 23.2642,104.9556 23.1763,104.8183 23.1268,104.8457 22.9675,104.7359 22.8247,104.604 22.8302,104.3678 22.6928,104.2744 22.7423,104.2799 22.8357,104.0986 22.7917,104.0382 22.7148,104.0162 22.5226,103.9668 22.5061,103.824 22.6159,103.6482 22.7972,103.5218 22.594,103.4339 22.7148,103.4449 22.7533,103.3405 22.8192,103.2856 22.6874,103.2032 22.6544,103.1867 22.5665,103.0329 22.4456,102.934 22.4896,102.8846 22.594,102.7033 22.7038,102.577 22.7093,102.5165 22.7807,102.3298 22.5555,102.2529 22.4566,102.2693 22.4182,102.1485 22.4017,102.0331 22.4731,101.8738 22.3852,101.8024 22.4896,101.6871 22.4731,101.6266 22.2808,101.5497 22.2479,101.6047 22.16,101.5772 22.116,101.6211 21.9677,101.7145 21.9293,101.7804 21.8304,101.753 21.726,101.8244 21.6052,101.764 21.5777,101.7804 21.5118,101.742 21.314,101.8464 21.2426,101.731 21.1382,101.6761 21.1987,101.5992 21.1822,101.5607 21.2481,101.3959 21.2261,101.286 21.1767,101.2311 21.314,101.2696 21.3744,101.1982 21.4129,101.2146 21.5612,101.1762 21.5612,101.1487 21.5612,101.1597 21.6711,101.0883 21.77,101.0114 21.7095,100.885 21.6876,100.7257 21.5118,100.5829 21.4514,100.484 21.4568,100.4291 21.5447,100.2533 21.4678,100.127 21.5173,100.105 21.5942,100.1709 21.6656,100.127 21.704,99.9951 21.704,99.9402 21.8249,99.9951 21.9732,99.9622 22.0556,99.8688 22.0282,99.4787 22.138,99.3579 22.0941,99.2151 22.1215,99.1766 22.1875,99.237 22.2534,99.2535 22.3907,99.3634 22.4841,99.3854 22.5775,99.3139 22.7368,99.3908 22.8192,99.5611 22.9346,99.5172 23.0829,99.3249 23.1103,99.1766 23.0939,99.0503 23.1213,99.0338 23.1598,98.891 23.2092,98.9459 23.3081,98.9239 23.418,98.8031 23.5388,98.891 23.6157,98.8525 23.6322,98.8086 23.7695,98.6987 23.786,98.6822 23.9124,98.7756 24.0277,98.9019 24.1101,98.7152 24.1321,98.6108 24.0882,98.5504 24.1321,98.1164 24.0991,97.7923 23.9563,97.7099 23.8684,97.6385 23.8629,97.5396 23.9288,97.7428 24.1101,97.7428 24.2255,97.7813 24.2584,97.6824 24.3024,97.7264 24.3793,97.6934 24.4507,97.5396 24.4342,97.578 24.5606,97.589 24.7638,97.6604 24.7858,97.7428 24.9122,97.7319 25.0824,97.8143 25.1648,97.8527 25.2747,97.9241 25.2143,98.0615 25.3077,98.1603 25.456,98.1274 25.5219,98.2427 25.6153,98.3142 25.5494,98.402 25.5933,98.479 25.7801,98.5394 25.846,98.6438 25.7911,98.7097 25.857,98.6822 25.9394,98.6163 25.9779,98.7426 26.1921,98.6767 26.2415,98.7371 26.3514,98.7536 26.5601,98.7866 26.6206,98.7481 26.714,98.7646 26.7964,98.7042 27.2139,98.7371 27.3512,98.6877 27.4885,98.7042 27.5654,98.5888 27.5709,98.5394 27.6204,98.4405 27.6313,98.4295 27.5544,98.3196 27.5215,98.3032 27.6313,98.2263 27.7192,98.2263 27.8126,98.1768 27.8401,98.1988 27.9335,98.1439 27.95,98.1603 28.1038,98.1327 28.1545,98.0314 28.1923,98.0261 28.2459,97.9121 28.3675,97.7965 28.332,97.7379 28.4227,97.721 28.4982,97.6658 28.5352,97.5639 28.5435,97.5066 28.4938,97.5216 28.4476,97.4815 28.3788,97.5027 28.3373,97.4627 28.2741,97.3473 28.2081,97.1462 28.3532,97.0782 28.3713,96.9769 28.3297,96.8893 28.3856,96.8614 28.4854,96.767 28.5148,96.7451 28.5715,96.6136 28.6138,96.495 28.6092,96.5358 28.681,96.6212 28.7354,96.5177 28.8864,96.5215 28.9303,96.5079 28.9469,96.4406 28.9529,96.4346 29.0066,96.3681 29.0383,96.3681 29.1085,96.2616 29.0889,96.2133 29.0277,96.1831 29.1108,96.3017 29.1773,96.2624 29.243,96.1831 29.2717,96.1392 29.3427,96.0539 29.3827,95.9655 29.3759,95.8484 29.3163,95.8386 29.3533,95.757 29.3223,95.7087 29.2037,95.6097 29.2347,95.5002 29.1818,95.5093 29.1267,95.2993 29.1365,95.2728 29.1055,95.1361 29.0881,95.0968 29.1418,94.9941 29.144,94.7516 29.2294,94.6935 29.3178,94.5409 29.2196,94.4571 29.2128,94.3793 29.1538,94.2931 29.1523,94.2758 29.1131,94.3302 29.039,94.2607 28.9318,94.1783 28.9363,94.136 28.8902,93.9751 28.8215,93.8966 28.7573,93.7901 28.7369,93.707 28.6644,93.6231 28.6885,93.4486 28.6689,93.3308 28.6062,93.185 28.4944,93.1473 28.366,92.932 28.2489,92.9214 28.2006,92.7907 28.1877,92.6774 28.1507,92.6585 28.0744,92.7318 28.0548,92.7326 27.9861,92.6464 27.9128,92.478 27.8342,92.3194 27.7972,92.2937 27.8705,92.2129 27.8727,91.9236 27.7179,91.8503 27.7625,91.6433 27.761,91.5708 27.8478,91.6259 27.8894,91.4904 27.9677,91.3203 28.0637,91.2491 28.0637,91.1992 27.9882,91.1187 27.9939,91.0208 28.0221,90.9201 28.0488,90.8377 28.0433,90.7799 28.0419,90.6878 28.079,90.5835 28.0231,90.5042 28.0654,90.4846 28.1356,90.5473 28.1575,90.5737 28.2451,90.3479 28.3041,90.2686 28.2791,90.2119 28.36,90.1809 28.3207,90.0593 28.3456,89.9823 28.3154,89.8659 28.3124,89.7655 28.1824,89.5963 28.1636,89.4589 28.0049,89.3893 27.8901,89.3655 27.8676,89.2979 27.8524,89.2254 27.7836,89.2284 27.7345,89.128 27.6152,89.0531 27.608,88.978 27.5313,88.9515 27.4108,89.0043 27.3261,88.9232 27.325,88.8879 27.3403,88.8379 27.3792,88.7828 27.4543,88.7741 27.544,88.8485 27.668,88.8568 27.8153,88.8817 27.8916,88.8364 28.0155,88.7548 28.0805,88.6672 28.0767,88.6332 28.1228,88.5652 28.0903,88.5448 28.0344,88.4093 27.9821,88.251 27.9422,88.135 27.95,88.135 27.8785,87.9843 27.8869,87.8314 27.9514,87.7245 27.8048,87.6135 27.8123,87.5855 27.8531,87.4518 27.8229,87.4246 27.8607,87.3604 27.8282,87.2652 27.8501,87.2267 27.8206,87.1096 27.8478,87.0379 27.9506,86.9336 27.9619,86.8724 28.0231,86.7901 28.0193,86.7486 28.0986,86.5778 28.1135,86.5355 28.051,86.5144 27.9573,86.4419 27.906,86.2908 27.9777,86.2266 27.9815,86.1904 28.1707,86.0831 28.0903,86.0808 28.0155,86.1246 27.9271,86.065 27.8999,85.9471 27.9422,85.9773 27.9898,85.901 28.0533,85.8973 28.1107,85.8164 28.2028,85.7507 28.2361,85.7122 28.3856,85.5913 28.3078,85.4365 28.3343,85.3768 28.2776,85.2552 28.2935,85.2038 28.3403,85.1192 28.329,85.1087 28.3479,85.1004 28.4589,85.1479 28.4876,85.1978 28.6274,85.1147 28.687,85.0581 28.6825,84.9818 28.5911,84.8579 28.5715,84.6962 28.6364,84.6252 28.7369,84.4923 28.7354,84.4371 28.7694,84.4092 28.8509,84.2256 28.8932,84.2491 29.0368,84.1894 29.0473,84.2 29.1251,84.1214 29.2739,83.9628 29.3306,83.814 29.3027,83.8019 29.2551,83.7127 29.2445,83.6334 29.1584,83.5179 29.2181,83.4166 29.357,83.4136 29.422,83.2814 29.499,83.261 29.5776,83.15 29.6244,83.0699 29.6093,83.0088 29.6743,82.9566 29.6622,82.9143 29.7075,82.8275 29.6902,82.7515 29.7628,82.7021 29.8397,82.6401 29.8337,82.5623 29.9553,82.4974 29.9477,82.3969 30.0233,82.3637 30.0097,82.2466 30.0746,82.1665 30.0761,82.2058 30.1539,82.0993 30.2401,82.1061 30.3488,81.9951 30.3209,81.6181 30.444,81.5645 30.4297,81.5517 30.3722,81.4081 30.4206,81.4225 30.3043,81.3953 30.2068,81.2629 30.1418,81.2519 30.0539,81.245 30.0112,81.1332 30.0157,81.0916 30.0535,81.0833 30.1494,81.035 30.1978,81.0312 30.2476,80.927 30.2673,80.9073 30.3035,80.8016 30.3232,80.7343 30.401,80.6067 30.4712,80.5485 30.4485,80.4103 30.5248,80.2086 30.5883,80.1928 30.6661,80.2486 30.7197,80.1792 30.8058,80.1082 30.7817,80.0538 30.8391,79.9337 30.8791,79.8763 30.966,79.8559 30.9758,79.7524 31.006,79.6005 30.9388,79.5069 31.0324,79.4208 31.0559,79.4125 31.0725,79.4132 31.1072,79.3112 31.1495,79.3007 31.219,79.2266 31.2606,79.2501 31.2938,79.142 31.432,79.0748 31.4592,79.0106 31.3829,78.9449 31.3663,78.8837 31.2862,78.7689 31.3255,78.753 31.3852,78.7968 31.4441,78.7251 31.4849,78.7311 31.5325,78.8467 31.608,78.7598 31.6753,78.7024 31.8067,78.7681 31.9457,78.6835 32.1126,78.5967 32.1579,78.4886 32.2758,78.472 32.4412,78.4124 32.5175,78.4161 32.5673,78.5166 32.6142,78.611 32.5998,78.7228 32.6746,78.7817 32.6164,78.7576 32.5673,78.8135 32.4336,78.9683 32.3354,78.991 32.3717,79.1043 32.374,79.1315 32.4812,79.2485 32.5167,79.2757 32.5568,79.4049 32.5198,79.4525 32.6036,79.5386 32.6716,79.5575 32.7592,79.4804 32.8007,79.4714 32.8785,79.3656 32.9382,79.3286 33.0342,79.3649 33.0931,79.3747 33.1195,79.4102 33.1701,79.2168 33.2381,79.1519 33.1822,79.1451 33.186,79.0718 33.2245,79.0204 33.325,78.9351 33.3869,78.8361 33.4269,78.7326 33.569,78.7175 33.6233,78.7764 33.745,78.7425 34.0003,78.6563 34.032,78.6571 34.0743,78.7425 34.0924,78.8618 34.1657,78.926 34.1544,78.9849 34.3001,79.0574 34.2994,79.0068 34.4067,78.932 34.3802,78.7387 34.4595,78.71 34.526,78.6375 34.5434,78.5634 34.5094,78.5521 34.5713,78.4592 34.5691,78.29 34.6151,78.2711 34.7012,78.2084 34.7209,78.1857 34.7942,78.2371 34.8697,78.1774 34.9301,78.1465 35.0706,78.003 35.2406,78.0226 35.3584,78.0906 35.4226,78.1072 35.4392,78.0762 35.4959,78.0264 35.4694,77.9244 35.4974,77.9108 35.4619,77.8126 35.5223,77.6872 35.4536,77.5037 35.4891,77.4425 35.4619,77.3397 35.5178,77.3027 35.5457,77.194 35.5216,77.0618 35.6001,76.9182 35.6115,76.8533 35.6689,76.777 35.6583,76.6788 35.755,76.6153 35.7618,76.561 35.8222,76.5987 35.9,76.2988 35.8426,76.2732 35.8418,76.1651 35.823,76.1448 35.8373,76.1591 35.9174,76.1009 36.0163,76.0035 36.0171,75.9423 36.0707,75.9325 36.1357,76.0126 36.1727,75.9846 36.3502,76.0352 36.4091,75.9257 36.573,75.9423 36.5957,75.8041 36.7105,75.6893 36.7581,75.6485 36.7672,75.6213 36.7687,75.5699 36.7672,75.4687 36.7166,75.4211 36.7732,75.4204 36.8895,75.375 36.9469,75.2338 36.959,75.0291 37.0164,74.9173 36.9787,74.9135 36.9333,74.8984 36.9349,74.841 37.0429,74.8214 37.0542,74.739 37.0217,74.6975 37.0837,74.5804 37.0308,74.4958 37.0648,74.4558 37.1426,74.4951 37.1733,74.5011 37.2393,74.6582 37.2347,74.7496 37.2846,74.8093 37.2151,74.8932 37.2325,74.915 37.237,74.9105 37.2748,75.128 37.3246,75.094 37.3715,75.1537 37.4092,75.1323 37.4369,75.0554 37.5248,75.0313 37.5006,74.9324 37.5679,74.8969 37.6615,75.011 37.7763,74.9128 37.8564,74.9165 38.0248,74.8206 38.0853,74.804 38.1986,74.6982 38.228,74.7058 38.2824,74.6658 38.3806,74.6952 38.4252,74.5064 38.4713,74.2843 38.5982,74.1211 38.642,74.0721 38.5301,73.9238 38.5356,73.8039 38.6118,73.8054 38.6639,73.7442 38.7319,73.7669 38.7787,73.6981 38.852,73.757 38.9426,73.8341 38.9207,73.8537 38.9524,73.8129 39.0423,73.751 39.0257,73.6143 39.247,73.5614 39.25,73.5259 39.3913,73.5924 39.4117,73.5984 39.4578,73.6601 39.464,73.8213 39.4593,73.8636 39.4789,73.9414 39.6028,73.9149 39.7146,73.8304 39.7716,73.9127 39.8634,73.9104 39.9095,73.9814 40.0001,73.9504 40.0273,74.0282 40.084,74.0758 40.0742,74.2631 40.1248,74.3402 40.084,74.5237 40.2041,74.5857 40.2743,74.6801 40.2645,74.6945 40.3423,74.8017 40.3506,74.8629 40.3174,74.9082 40.3461,74.7896 40.4465,74.8251 40.5227,74.8347 40.5239,74.9877 40.4507,75.2202 40.4418,75.4022 40.5546,75.4604 40.6089,75.5933 40.6588,75.6409 40.507,75.7201 40.4857,75.715 40.4375,75.6432 40.3831,75.6998 40.2773,75.8245 40.3374,75.8959 40.3045,75.9673 40.3759,76.0881 40.3812,76.187 40.3814,76.2781 40.4331,76.3351 40.3382,76.4454 40.3929,76.5375 40.4647,76.5338 40.5123,76.6485 40.6286,76.6728 40.6943,76.641 40.7623,76.7022 40.7887,76.7299 40.875,76.7551 40.9534,76.8533 40.9768,76.8797 41.0274,76.9968 41.072,77.0844 41.0629,77.1849 41.0108,77.2755 41.0017,77.3548 41.041,77.478 40.9957,77.6872 41.0032,77.8776 41.0735,77.9833 41.078,78.0596 41.0327,78.1903 41.0788,78.2195 41.1449,78.2745 41.2109,78.3843 41.2713,78.3897 41.4081,78.5279 41.4398,78.5551 41.4746,78.645 41.4686,78.713 41.5532,78.815 41.5584,78.9366 41.64,79.1254 41.7231,79.2176 41.7269,79.3226 41.8107,79.4102 41.8409,79.6043 41.8561,79.6398 41.8938,79.7735 41.8938,79.88 42.0336,80.0251 42.0487,80.1391 42.0305,80.2262 42.0626,80.1481 42.1176,80.1316 42.168,80.1736 42.2129,80.1784 42.2209,80.2713 42.2262,80.2842 42.3191,80.2267 42.3591,80.2048 42.4279,80.2191 42.4853,80.2576 42.5018,80.1618 42.6318,80.223 42.7126,80.2622 42.8297,80.3272 42.8237,80.4004 42.8259,80.5886 42.8901,80.3808 43.0223,80.4114 43.0566,80.5927 43.1335,80.7245 43.1335,80.8014 43.1775,80.7789 43.3116,80.6837 43.3283,80.7532 43.4657,80.5228 43.823,80.5092 43.9069,80.4526 43.9847,80.445 44.0746,80.3944 44.1116,80.4058 44.2914,80.3491 44.4787,80.4111 44.6094,80.337 44.6894,80.2381 44.7212,80.1467 44.8277,79.9933 44.7952,79.914 44.9009,80.0923 45.0482,80.2411 45.0278,80.3189 45.0709,80.402 45.049,80.4934 45.1215,80.6059 45.1102,80.73 45.1716,80.8545 45.1283,80.9519 45.1668,81.075 45.1744,81.1128 45.2197,81.4527 45.2688,81.6264 45.3541,81.7692 45.3768,81.9225 45.2295,82.0457 45.2537,82.0993 45.2046,82.2405 45.2356,82.3066 45.2265,82.4717 45.1766,82.582 45.2182,82.5865 45.3428,82.5412 45.4214,82.4165 45.4737,82.27 45.5505,82.2572 45.6185,82.3471 45.8028,82.3335 45.9388,82.4543 45.9766,82.5125 46.1563,82.6582 46.3911,82.7627 46.5791,82.7784 46.6851,82.8902 46.8762,82.9309 47.0114,82.98 47.0311,82.9933 47.0558,83.0307 47.2123,83.1749 47.2237,83.2444 47.1784,83.3434 47.1761,83.5556 47.0681,84.0383 46.9653,84.2151 46.9993,84.4205 47.0107,84.5074 46.9782,84.7045 46.9963,84.7841 46.9074,84.806 46.825,84.9599 46.869,84.9825 46.9193,85.0701 46.9329,85.2197 47.0515,85.5294 47.0598,85.5762 47.1904,85.6903 47.2184,85.7069 47.3755,85.6034 47.5198,85.6216 47.6074,85.5415 47.9398,85.5808 48.1392,85.7356 48.3711,85.8406 48.4255,86.0498 48.4474,86.2145 48.4353,86.318 48.501,86.4479 48.4987,86.5884 48.5433,86.6337 48.6249,86.7629 48.7148,86.7516 48.7941,86.8105 48.85,86.7387 48.9059,86.7229 48.9905,86.8294 49.0501,86.8551 49.1076,86.9857 49.103,87.1346 49.1506,87.2214 49.1144,87.3126 49.0997,87.4382 49.0847,87.701 49.1707,87.8329 49.1762,87.8548 49.0444,87.9153 48.9949,87.767 48.9345,87.7505 48.885,87.9247 48.7624,88.0002 48.7624,88.0735 48.6913,88.0145 48.6551,88.004 48.566,88.3499 48.4708,88.4172 48.3907,88.4935 48.4156,88.6015 48.3439,88.5841 48.2344,88.7941 48.2162,88.9452 48.0878,89.023 48.0946,89.0705 48.047,89.0713 47.9466,89.1929 47.9503,89.3183 48.0281,89.5661 48.0485,89.6174 47.9458,89.7255 47.8922,89.7965 47.8181,89.9302 47.8166,89.9641 47.8846,90.0752 47.8529,90.0797 47.766,90.1432 47.723,90.3237 47.6671,90.3267 47.6225,90.4566 47.4873,90.4914 47.38,90.4755 47.3241,90.5178 47.2441,90.7346 47.0016,90.8812 46.9767,90.9146 46.9514,90.9658 46.8619,90.9537 46.8271,91.063 46.7097,91.03 46.6053,91.0794 46.5614,90.9733 46.361,90.8962 46.3053,91.0118 46.1239,91.0217 46.0226,90.8479 45.8874,90.7127 45.725,90.6689 45.4863,90.7671 45.432,90.8328 45.299,90.8963 45.2476,90.8645 45.2038,90.931 45.1925,91.1221 45.2144,91.2415 45.1321,91.3857 45.1117,91.4371 45.1547,91.5587 45.0686,91.6909 45.0618,91.8004 45.0815,92.0996 45.0754,92.2348 45.0135,92.3065 45.0256,92.4803 45.0006,92.7756 45.0497,92.9297 45.0157,93.1737 45.0127,93.5083 44.9651,93.6481 44.9206,93.8157 44.8224,94.1972 44.6622,94.306 44.5897,94.3339 44.5232,94.4465 44.5029,94.5756 44.4485,94.6957 44.348,94.9307 44.2891,94.9903 44.2543,95.1898 44.2649,95.4081 44.2944,95.415 44.2505,95.3721 44.2256,95.3227 44.027,95.5236 44.0005,95.6218 43.8517,95.7336 43.5972,95.8569 43.4113,95.8779 43.2761,95.9089 43.2354,96.3591 42.8992,96.3855 42.724,96.6936 42.7325,96.9353 42.7105,97.1496 42.7765,97.3803 42.749,97.7538 42.7105,98.0175 42.6831,98.2482 42.6391,98.5119 42.6336,99.292 42.5842,99.4952 42.5677,99.9951 42.6501,100.2808 42.6281,100.3247 42.6831,100.9125 42.6446,101.8189 42.4743,102.0606 42.2161,102.4122 42.1392,102.7418 42.1337,102.978 42.0239,103.3241 41.9085,103.8624 41.8096,104.0272 41.8096,104.5436 41.8865,104.5326 41.6613,104.9446 41.6448,105.0325 41.5679,105.2742 41.7437,105.3072 41.7327,105.8016 41.958,106.0103 42.0184,106.686 42.2601,107.2683 42.359,107.2957 42.4084,107.4551 42.4633,107.5539 42.4249,107.911 42.4139,108.0319 42.4414,108.2571 42.4524,108.5263 42.4579,108.7844 42.4084,108.8119 42.3864,108.9657 42.4579,109.2898 42.4304,109.548 42.4743,109.8337 42.6227,110.1523 42.6391,110.416 42.771,110.4544 42.8589,110.6192 42.9303,110.7016 43.0566,110.817 43.128,111.0477 43.3423,111.3718 43.4412,111.4377 43.4961,111.5696 43.5071,111.7124 43.6169,111.7618 43.6939,111.9706 43.7378,112.009 43.8037,111.8497 43.996,111.6684 44.0344,111.5091 44.1883,111.3938 44.3201,111.3883 44.3915,111.5146 44.5893,111.5641 44.7376,111.7399 44.9628,111.8662 45.0672,112.0859 45.0782,112.4155 45.0617,112.5968 44.9408,112.8275 44.8584,112.8989 44.8639,113.1187 44.798,113.4977 44.7925,113.5746 44.7541,114.0471 44.9518,114.3767 45.1661,114.4865 45.2869,114.5469 45.3968,114.7502 45.4517,115.0633 45.3693,115.338 45.3858,115.5797 45.4297,115.7225 45.4407,115.7665 45.5012,115.9368 45.611,116.0906 45.6824,116.1675 45.6769,116.2719 45.7593,116.2609 45.9516,116.3652 46.067,116.6069 46.2977,116.6893 46.3087,116.7663 46.3142,116.8596 46.3801,116.9365 46.3526,117.365 46.3471,117.4364 46.5778,117.6012 46.5833,117.7001 46.5064,117.8539 46.5339,117.8814 46.5778,118.0407 46.6328,118.2714 46.7866,118.5626 46.7701,118.6724 46.8031,118.7988 46.7811,118.9361 46.8196,119.0954 46.7811,119.1284 46.7207,119.2163 46.6822,119.3261 46.6932,119.436 46.6493,119.4525 46.5504,119.4031 46.457,119.5129 46.4185,119.5953 46.5504,119.7766 46.6218,119.837 46.7042,119.9194 46.7426,119.8041 46.9239,119.87 47.1601,119.8151 47.27,119.7546 47.314,119.5569 47.3469,119.48 47.3304,119.3207 47.4348,119.3371 47.5337,119.1888 47.5172,119.1229 47.704,118.7768 47.8084,118.4802 48.0006,118.0737 48.0391,117.8375 48.0226,117.7605 47.9896,117.5573 47.7864,117.4694 47.7479,117.376 47.6381,117.1068 47.8084,116.8816 47.9017,116.6619 47.8633,116.6124 47.8358,116.4476 47.8413,116.2554 47.8743,116.14 47.8358,115.9368 47.6765,115.5522 47.9457,115.5742 48.0665,115.5193 48.1819,115.8104 48.2588,115.8324 48.3357,115.8214 48.5335,116.1125 48.7917,116.0576 48.885,116.4202 49.4344,116.6839 49.8189,116.7663 49.8244,117.0135 49.6926,117.2881 49.6321,117.5738 49.6376,117.8759 49.5388,118.1616 49.6596,118.2385 49.731,118.3813 49.775,118.3868 49.8244,118.4857 49.8354,118.5626 49.9233,118.9306 49.9837,119.0844 49.9837,119.2657 50.0771,119.3097 50.154,119.3426 50.3463,119.1559 50.3573,119.2547 50.4836,119.2767 50.6045,119.4305 50.6924,119.5074 50.7912,119.4909 50.8407,119.6173 51.0055,119.6887 51.0165,119.7491 51.0989,119.7766 51.2252,119.87 51.2966,119.9029 51.39,119.9853 51.4504,120.0897 51.6757,120.1721 51.6812,120.4742 51.8844,120.6445 51.9284,120.683 52.0327,120.7764 52.1591,120.7544 52.2525,120.6226 52.3129,120.6775 52.4282,120.683 52.5106,120.4523 52.6425,120.26 52.615,120.1886 52.5766,120.0623 52.5821,120.0238 52.6315,120.0238 52.7578,120.282 52.8622,120.5292 53.071,120.6281 53.1039,120.683 53.1753,120.8753 53.2852,121.1225 53.2742,121.4081 53.3237,121.8146 53.417,122.0234 53.4225,122.1387 53.4665,122.3145 53.4994,122.4409 53.4445,122.6441 53.461,122.8309 53.4555,123.0396 53.5104,123.111 53.4994,123.2758 53.5599,123.4406 53.5324,123.5835 53.5489,123.6769 53.4885,123.8581 53.483,124.1163 53.3456,124.2482 53.3676,124.3745 53.2468,124.5283 53.1973,124.7041 53.1863,124.8305 53.1314,124.9843 53.1918,125.1985 53.1918,125.4842 53.0929,125.5776 53.082,125.7369 52.9776,125.6545 52.9062,125.6709 52.8567,125.7753 52.8952,125.9676 52.7633,126.05 52.7963,126.05 52.67,125.9731 52.659,126.006 52.5821,126.072 52.5985,126.1928 52.5326,126.3411 52.3953,126.3411 52.2525,126.2972 52.2085,126.4675 52.1701,126.5554 52.1096,126.5059 52.0272,126.4455 52.0217,126.462 51.9448,126.6707 51.7251,126.7366 51.6317,126.6927 51.5768,126.83 51.5273,126.7861 51.4504,126.885 51.401,126.9784 51.3076,126.896 51.1868,126.9234 51.0604,127.1102 50.9341,127.3574 50.5825,127.286 50.4781,127.3574 50.4232,127.3299 50.3573,127.3958 50.2804,127.5716 50.2419,127.5881 50.1595,127.5002 50.0606,127.4947 49.9782,127.5387 49.9233,127.5167 49.8354,127.665 49.764,127.698 49.6651,127.8024 49.5937,127.9452 49.6157,128.066 49.5442,128.2583 49.5003,128.3846 49.5882,128.533 49.5992,128.7088 49.5662,128.7747 49.4728,128.879 49.4783,128.9944 49.4509,129.0493 49.374,129.1317 49.352,129.2032 49.4014,129.3405 49.352,129.3844 49.4289,129.5218 49.4124,129.5492 49.2916,129.6701 49.2916,129.736 49.2092,129.8459 49.1652,129.9063 49.0553,130.2579 48.8631,130.4446 48.9015,130.5161 48.8521,130.6259 48.8796,130.6369 48.8136,130.527 48.6378,130.5875 48.5939,130.6204 48.484,130.7578 48.495,130.7303 48.4401,130.8237 48.3028,130.7523 48.1874,130.6534 48.0995,130.6809 48.0446,130.8621 47.9347,130.95 47.8193,130.9555 47.7205,131.0324 47.6875,131.1588 47.693,131.2522 47.7314,131.4994 47.726,131.5818 47.66,131.6971 47.7095,131.8015 47.671,131.9663 47.6655,131.9993 47.704,132.2465 47.704,132.3179 47.7534,132.5046 47.7095,132.598 47.7424,132.5925 47.7919,132.6914 47.9512,132.7848 47.9292,132.8782 48.0006,133.01 48.0171,133.1584 48.105,133.3451 48.105,133.466 48.0665,133.5539 48.116,133.8011 48.1984,133.8725 48.1874,133.8945 48.2588,134.0098 48.2808,134.0483 48.3357,134.3889 48.3852,134.5756 48.3632,134.713 48.2753,134.669 48.1654,134.5482 48.0226,134.5866 47.9072,134.658 47.8908,134.6745 47.8248,134.7734 47.7534,134.7514 47.6765,134.669 47.5831,134.4932 47.4458,134.3339 47.4348,134.1856 47.3304,134.1472 47.248,134.2241 47.1821,134.2131 47.1052,134.1362 47.0887,134.0648 46.9734,134.0208 46.8196,134.0483 46.7756,133.9988 46.6383,133.9109 46.5833,133.8505 46.4625,133.9439 46.3911,133.878 46.3581,133.9109 46.2647,133.7022 46.1604,133.7352 46.045,133.6637 45.9406,133.466 45.8308,133.477 45.655,133.3177 45.4957,133.2133 45.5121,133.1364 45.4188,133.0869 45.2814,133.1309 45.1331,132.9496 45.0177,132.8617 45.0562,132.8374 45.0616,132.8039 45.1764,132.7312 45.2439,132.57 45.3063,132.331 45.3427,132.1023 45.3063,132.0063 45.2469,131.9993 45.2485,131.9114 45.3309,131.829 45.3089,131.763 45.21,131.6806 45.2155,131.6861 45.1166,131.4719 44.9573,131.3456 44.9793,131.2906 44.9298,131.1478 44.9353,130.9555 44.8529,131.1038 44.6936,131.2906 44.0784,131.2027 43.7817,131.2302 43.6334,131.1972 43.5236,131.2851 43.4741,131.3071 43.3972,131.1917 43.2104,131.2027 43.1335,131.0984 43.0182,131.1368 42.9577,131.0214 42.9193,131.016 42.8534,130.8237 42.8699,130.7688 42.8314,130.6864 42.8424,130.5435 42.8094,130.4062 42.7215,130.5325 42.6996,130.6204 42.6227,130.56 42.5348,130.6149 42.4304,130.56 42.4524,130.4996 42.6172,130.3787 42.6007,130.2524 42.7051,130.2249 42.7875,130.2579 42.9028,130.1425 42.8973,130.1096 42.9468,129.9502 42.9797,129.8514 42.9632,129.7635 42.7105,129.7415 42.4633,129.6261 42.4633,129.5492 42.359,129.4449 42.4414,129.313 42.4249,129.2361 42.3755,129.2526 42.3205,129.1812 42.2326,129.2141 42.2107,129.0109 42.0953,128.9175 42.0129,128.7417 42.0404,128.5714 41.9964,128.4396 42.0294,128.2363 42.0294,128.066 41.9635,128.1045 41.7987,128.1539 41.7272,128.2748 41.6503,128.3132 41.5844,128.2034 41.4086,128.11 41.3647,127.9287 41.4526,127.8628 41.4031,127.5552 41.4306,127.5442 41.4745,127.3519 41.4636,127.264 41.513,127.1157 41.546,127.1212 41.6229,127.0553 41.6613,127.0443 41.7437,126.9289 41.8096,126.7971 41.6943,126.6213 41.6723,126.5609 41.6119,126.5883 41.5624,126.5004 41.4306,126.5279 41.3647,126.407 41.3207,126.2862 41.1614,126.1598 41.0845,126.0335 40.9252,125.9346 40.8758,125.8687 40.9032,125.7039 40.8648,125.4128 40.656,125.3249 40.6396,125.182 40.6011,125.0117 40.5297,125.0227 40.4583,124.8964 40.4803,124.7371 40.3649,124.7206 40.3209,124.5228 40.2276,124.3361 40.0628,124.3525 39.9913,124.2262 39.9199,124.2042 39.8595,123.9955 39.8156,123.8581 39.854,123.7867 39.8265,123.6109 39.843,123.4352 39.7332,123.4022 39.7826,123.3033 39.7771,123.2758 39.6947,123.133 39.6617,122.9902 39.6672,122.9353 39.6178,122.7924 39.5848,122.4848 39.4145,122.3914 39.42,122.298 39.3706,122.2376 39.2772,122.1113 39.2058,122.0948 39.1234,121.9629 39.03,121.897 39.074,121.7926 39.019,121.7212 39.0355,121.5839 38.8817,121.496 38.8213,121.3367 38.8213,121.2049 38.7224,121.1389 38.7224,121.095 38.9256,121.2268 38.9311,121.3422 38.9751,121.3752 39.0575,121.4576 39.0135,121.6608 39.0795,121.6278 39.2772,121.7542 39.3212,121.7542 39.3761,121.5235 39.3596,121.4466 39.4805,121.5509 39.5903,121.5509 39.6727,121.4576 39.7387,121.54 39.8595,121.6114 39.8595,121.6993 39.9254,121.7762 39.9144,122.0344 40.1891,122.1058 40.2331,122.287 40.4857,122.1442 40.6011,122.1168 40.678,122.0344 40.7384,121.8586 40.8153,121.8036 40.9142,121.7652 40.8483,121.5564 40.8428,121.4905 40.9032,121.1774 40.9252,121.062 40.8208,120.9741 40.8318,120.9192 40.7659,120.9357 40.689,120.8368 40.678,120.7929 40.5956,120.6226 40.4803,120.5566 40.3539,120.4962 40.3209,120.4468 40.1946,119.9414 40.0518,119.848 39.9859,119.5239 39.8815,119.5294 39.8101,119.4635 39.8101,119.3591 39.7441,119.2437 39.475,119.2987 39.4365,119.0844 39.2497,119.0075 39.2003,118.7933 39.1289,118.5681 39.1564,118.3319 39.0025,118.1835 39.0849,118.0847 39.2003,118.0077 39.2058,117.9144 39.1948,117.7496 39.0849,117.7825 38.9861,117.7166 38.9696,117.5738 38.7718,117.5573 38.618,117.7001 38.3763,117.8155 38.2609,117.8649 38.2719,118.0901 38.1401,118.3868 38.1456,118.5681 38.1071,118.5736 38.1401,118.8372 38.2115,118.8482 38.0961,118.9251 38.0687,119.002 37.9588,119.0295 37.8599,119.002 37.805,119.0789 37.7006,118.9746 37.6072,118.9526 37.5029,118.9965 37.2941,119.1229 37.2117,119.2822 37.1568,119.7381 37.1403,119.881 37.2337,119.9414 37.4095,120.1447 37.4754,120.2985 37.5908,120.2875 37.6787,120.4468 37.7501,120.5731 37.7556,120.7434 37.8325,120.9357 37.8215,120.9357 37.7775,121.0456 37.7061,121.1389 37.7116,121.1444 37.6017,121.2433 37.5743,121.3642 37.5853,121.4685 37.4699,121.5729 37.426,121.6663 37.4589,121.941 37.4699,122.1168 37.5523,122.1717 37.4315,122.2431 37.4644,122.3255 37.4095,122.5672 37.3985,122.6057 37.3765,122.5507 37.2776,122.6002 37.2117,122.4903 37.1568,122.4573 37.0744,122.5452 36.9755,122.342 36.8327,122.1827 36.8766,122.1662 36.9535,122.0453 36.9371,122.0014 36.9975,121.919 36.9316,121.6663 36.8217,121.5894 36.8547,121.3587 36.7173,121.1444 36.6844,121.0181 36.58,120.9192 36.569,120.9632 36.4756,120.8808 36.3767,120.8368 36.4646,120.7105 36.4427,120.6775 36.2504,120.6885 36.1295,120.5457 36.1131,120.4248 36.0581,120.304 36.0856,120.3699 36.2119,120.293 36.2614,120.2655 36.179,120.2216 36.2284,120.1117 36.19,120.0952 36.1076,120.1886 36.0581,120.1886 35.9043,120.0677 35.8823,120.0128 35.723,119.9524 35.767,119.9194 35.6516,119.8645 35.6077,119.7436 35.6296,119.6448 35.5582,119.5624 35.3769,119.4085 35.2671,119.3701 35.1078,119.2822 35.0858,119.2218 35.0583,119.1778 34.8551,119.2273 34.7782,119.4525 34.7397,119.4745 34.6628,119.5569 34.6024,119.7931 34.498,119.7931 34.4705,119.9469 34.4541,120.271 34.3112,120.3314 34.1135,120.3918 33.9981,120.4083 33.8333,120.5182 33.7344,120.5292 33.6081,120.6116 33.4817,120.5951 33.3664,120.7654 33.1357,120.7929 33.0423,120.8862 33.0203,120.9082 32.883,120.8808 32.7896,120.9302 32.6962,120.9027 32.6138,120.9961 32.5424,121.0785 32.5259,121.3642 32.3941,121.4026 32.2567,121.3642 32.2403,121.4246 32.1139,121.529 32.1084,121.7267 32.0315,121.8311 31.9107,121.9025 31.7678,121.8696 31.6854,121.6333 31.7349,121.474 31.8283,121.3037 31.8832,121.084 31.7953,120.9357 31.8228,120.9082 31.9161,120.8093 32.015,120.5347 32.0919,120.4358 32.059,120.4523 32.0205,120.6116 31.9876,120.7214 31.9931,120.8148 31.8667,120.8038 31.7898,121.0016 31.7568,121.2213 31.6305,121.3312 31.4987,121.7048 31.2954,121.8146 31.1361,121.9135 30.9383,121.8531 30.8614,121.518 30.8285,121.3312 30.7021,121.2708 30.7021,121.1389 30.6032,121.0291 30.5813,120.9357 30.4824,120.9137 30.3725,120.7599 30.3505,120.6555 30.4055,120.6116 30.3615,120.6665 30.2132,120.6665 30.1308,120.8478 30.1308,121.084 30.2791,121.1994 30.3231,121.3477 30.3066,121.5015 30.1857,121.6278 30.0155,121.7926 29.9715,121.941 29.8891,121.9904 29.8177,121.8696 29.7573,121.8586 29.6968,121.7102 29.5705,121.5235 29.5101,121.518 29.4606,121.7212 29.543,121.7707 29.4716,121.8421 29.5375,121.7926 29.6089,121.9245 29.6474,121.9959 29.587,121.919 29.5265,121.9794 29.4387,121.919 29.4222,121.908 29.3013,121.9629 29.2629,121.9355 29.1969,121.8421 29.164,121.6224 29.1969,121.5949 29.2739,121.4521 29.1585,121.4576 29.1091,121.5784 29.12,121.6333 29.0926,121.6773 28.8564,121.6333 28.7245,121.507 28.6586,121.5894 28.4773,121.5949 28.3675,121.6553 28.3235,121.6169 28.2576,121.5784 28.307,121.463 28.3345,121.3806 28.2356,121.3587 28.1422,121.2708 28.1972,121.2213 28.3565,121.1334 28.34,121.1005 28.1862,121.0181 28.1477,120.9577 27.9774,120.8643 27.9335,120.8478 27.8676,120.6775 27.7028,120.6116 27.5984,120.6281 27.494,120.672 27.4775,120.65 27.3677,120.5292 27.3457,120.5621 27.2963,120.4797 27.1644,120.4248 27.1974,120.3699 27.0985,120.282 27.104,120.2271 26.9172,120.1227 26.9337,120.0348 26.8238,120.1172 26.7964,120.0952 26.6151,119.9524 26.6096,119.8865 26.5162,119.8425 26.5876,119.9414 26.6096,120.0348 26.714,120.0458 26.7909,119.9359 26.7964,119.87 26.6755,119.7766 26.8128,119.6777 26.7634,119.5788 26.7909,119.6008 26.5876,119.6667 26.6206,119.7876 26.5766,119.8315 26.4503,119.6173 26.4668,119.6557 26.3624,119.7162 26.3129,119.6448 26.269,119.6503 26.2031,119.5129 26.0767,119.7217 26.0053,119.6887 25.9174,119.5843 25.835,119.6338 25.7636,119.5843 25.6922,119.469 25.6757,119.5184 25.5549,119.6393 25.467,119.6557 25.3571,119.6063 25.3461,119.5733 25.456,119.5184 25.423,119.4525 25.5109,119.3646 25.5274,119.3371 25.5878,119.1339 25.412,119.2108 25.2692,119.2877 25.3296,119.3481 25.2747,119.2822 25.1703,119.1778 25.1813,118.9965 25.2967,118.9032 25.2637,118.9801 25.1978,118.9306 25.1154,118.8537 25.0879,118.9032 25.0275,118.9087 24.9176,118.7823 24.8572,118.623 24.8352,118.6505 24.7913,118.7713 24.7693,118.7329 24.6979,118.6395 24.6485,118.6505 24.5551,118.4967 24.6265,118.2989 24.5935,118.1616 24.6814,118.1011 24.5551,118.189 24.5276,118.1286 24.4232,118.0572 24.4947,117.9803 24.4562,117.8869 24.4892,117.9034 24.3958,118.0627 24.4068,118.0517 24.3573,118.1286 24.3079,118.0352 24.2145,117.9363 24.22,117.9528 24.1651,117.9034 24.0332,117.799 24.0058,117.7111 24.0332,117.7001 23.9508,117.6012 23.8629,117.5024 23.9179,117.4364 23.7531,117.387 23.786,117.2716 23.7366,117.2167 23.6212,117.1783 23.6157,117.0849 23.5718,117.0574 23.6487,116.9091 23.6377,116.8706 23.4509,116.7553 23.3411,116.7333 23.2477,116.6454 23.1653,116.6015 23.1982,116.5355 23.1158,116.5575 23.0224,116.4971 22.94,116.2664 22.951,116.0961 22.8247,116.0686 22.8522,115.9038 22.7917,115.6456 22.8796,115.5687 22.8302,115.4698 22.7038,115.3819 22.6928,115.3105 22.7917,115.2171 22.8357,115.0468 22.7917,115.0249 22.7038,114.8875 22.594,114.7502 22.594,114.7557 22.7588,114.8216 22.7917,114.7777 22.8357,114.5195 22.7093,114.5909 22.6544,114.5469 22.572,114.6239 22.5116,114.514 22.4511,114.3931 22.6159,114.227 22.5477)),((121.3202 31.8502,121.4411 31.7513,121.5839 31.6635,121.875 31.5591,121.8201 31.4602,121.5949 31.5206,121.3806 31.6195,121.1499 31.7843,121.2268 31.8392,121.3202 31.8502)))&quot;</value>
                                <value>35.175300000000007</value>
                                <value>99.387700000000009</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Age Breakup' captured-sheet='PopulationAge' id='5' />
                  <story-point caption='GDP Growth' captured-sheet='GDPYear' id='6' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='WorldGDPDashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone fixed-size='863' h='100000' id='3' is-fixed='true' type='layout-basic' w='100000' x='0' y='0'>
                <zone h='100000' id='9' name='GDP' w='50000' x='0' y='0' />
                <zone h='100000' id='10' name='GDPPerCapita' w='50000' x='50000' y='0' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42012.950994398147].[none:Country Name:nk]' type='color' />
            <card pane-specification-id='0' param='[excel-direct.42012.950994398147].[sum:Population: Total (count):qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='GDPPerCapita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
            <field>[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='PopulationAge'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[excel-direct.42012.950994398147].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='dashboard' name='World GDP/Population Show'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='worksheet' name='GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel-direct.42012.950994398147].[none:Country Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='GDPYear'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42012.950994398147].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='WorldGDPDashboard'>
      <viewpoints>
        <viewpoint name='GDP'>
          <geo-search-visibility value='1' />
        </viewpoint>
        <viewpoint name='GDPPerCapita'>
          <zoom type='entire-view' />
          <geo-search-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='WorldData'>
      <viewpoints />
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='GDP' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='GDPPerCapita' width='192'>
      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
      e/4AtcPpr6Nl+sUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='GDPYear' width='192'>
      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
      8fXlgwkUEjV+2cJBWLysprNEOD/QWwzk9qViVwbsqoBdGdCRiq5U9KRkICQ5YHDoIraubOx6
      oSzLNflwk3JK5/Z9FP/BIHSOmtMoHIFlzIiBczPXSVcyo5iJpRPFOxJjZpVuwjZlasJCYk88
      mycAXJnyTOlPHdSrJvbc+9F3nj6e0v0zTM+eY+Emx9KJ2bQtvrUt6AtXFKe49/hjuGI4otDx
      4wK5ye/wQlCW6UgByAY7/NM/f8DKcsTdTc033vnyUT95JFoDx6q7OCnsvlfmDs0qpz8fPqV+
      ukITPJi5pSiYBqQWKA2rDi4JJhpRWJQ0SGmQQqOEQZmcwGQonSGswVrhG8RWYqzEIPG6tbQ1
      9wvH3o8up5ojs45wrqihvI+AE85L0vjHrmzWMf6wBZ2Zjz+x1byd7NzkXFmvCTcxCUVxvZh0
      807uw/j3YkojzwQcwtmZvPIeBYWJGcqsWTpzzd7jmW/qZnPKexQvcnx23PM3+6vZe/syHCkA
      W7fvoO2AZPEyrWGKKTbIiKLoqJ/uQ9q7war704mmOS6UsrTnvnd7Kd3UHHCyZKEDCuKmz0/+
      jvWrcwTGoKwmsAZpp+/i9t5oz132NMZL5hJT6b1Xij33dHtpuJlzYvxU3iwb6+DSVKOUzoPz
      XWGnj+8xkz8RudL0K9M+5uDrZ34np8omJ2UsjmfLM/0MYnKupPeo/CnTtKQ9NnGnns89TiN4
      ZX2dG5sDVhfbyDwlCALiOKbX6419UUrXiCRJAD/im+f5vmPykIcv/RfyxsJRZI8F37+xycN+
      vqdS2VvFHJB78CX+lDj4Auesb9c86neTK4+i/linfC/IIb97vLvP4hETaZy1yEMm2Rx2/4nR
      tOe5j3Azf9Sz7cudzpjVVY/13PMdCdba2+nB2ZvIcZa8QU+S1pmeEDPu9alQ4ZSg4sYK5xqV
      AFQ416gEoMK5RiUAFc41KgGocK7xVAIghBh77JVLdJdx6e130Lky/6Bzupi7WXoMPum9y3Pl
      JO5peuW9p5cT3/v7Mp7+/aOuedJne5zfP84zls8xTe+w9/A0z3jQ+y9pHfSOj+v9TZ+bpn+c
      z3HQ759KAJRS4zGAcvJyGU/P+d17zhgz/oAH/Q6YcV99kntP/668V/lyyuPpidZ7fz99bu/1
      B12zN296gvqjfvc49I96/hIlvSd5R4/zjAfRn36Pe9/xcb2/6XMl4z7Oe3yS5zjo9081EFah
      wlnBMx8Is3rEj3/0A+48HBHUEpqhRiC5c+ch3/rjf89q43iL8MEv/oXbd+5wd3PApYur9I3j
      stpl4c3v8NLK8Y5mZv0t/vZvvgeNJZSwmOEOSesSg9423/idb1MPj6+J5azh3Z/+gE9ud8ic
      YGW5gRCK3oN7vP2vvsvlxdqx0QK49fEHvHfjJmrYJW7UuPlQ88133uC963f5vW9+7VhpmbTL
      9/7++/R0gIwi6raDsSEjVeO7v/ONY6WFSfnh979Hd2TYGoln3wj2fv8xK8sL1CKFUyF61CeJ
      Y1L92ba32Q8/x3f98hpxnNAbakIluXBh5UAPnM8KIQPqi2t+WUWniZI6Js9YXLlErB7bA+cx
      iQm0kVy6dIFaFJA5hTA5G1cusbPbPV5agBSOy+vrhGHCoLNLnCTc+PQmg37v2GkJGRAmbRaa
      NSIpUFGMkxGtlbVjp+WERAQxqwsNwjB49jWAQ3BxfZ2FxWXSXJMEIKIag26XC+3j9y9ZWFpF
      xA2+vrLBQrtJd6hpJcovr3HcEIqNjYssLS9jncRmA1QQsNsdHD8tYPXSOo32EldeymkmAZqQ
      Ua/D0urqsdOqNRdYjgVXfm2ZpNWms7PLhQsrjEajY6flEKxvXGZxeZncOAKXESZNhoPjFzYc
      XFzfYHFphctpVrUBKpxvzNcZrsK5Rz7c5fZmH53nLLWbNBo1+iONdJr2whK7O9vsPLiFXLjK
      gw9/Sry0wdW1Rbq7W9BYoV1LWGg3jq08lQBUmCuCpM3dD/+RjZeu8uf/+y946ZWXuHVvk8WG
      4pvvfIV/+dGPuLGj+Xd//HnuO8Wgs8U/f/iP3OoFGCzLKxf5w2//q6fZDuzg8hzPbSpUeDwI
      IXj59TdYWlzkrTd7tNotFhaWWWjXiOuLLK2uceWNS9RjRatVp7ayQS8RXEraaOsQQXKs5fn/
      1XgjkRL3eOYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Population' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='PopulationAge' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='World GDP/Population Show' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAeW0lEQVR4nO2daXAb55nnf90NoHHyBG+KFHVRoiTqsh3HR+zYzuF4EjsTx5loKnc2u1t7
      1Mx+mNnZD6nsMVu7U7OV2p3Jsck49uawnSjZJLbjKGs7tpw4tuzYlmRdpERJvA+AAIi7AXT3
      fmgSEm2IBCWQBIn3V9UFECCefrr7+fd7Pf2+kmmaJgJBhSKvtgMCwWoiBCCoaJSvfe1rXwNI
      BQb4/tNH2b9rK499++8YiKps72rlW9/8JjfceCNSgR8fevhbNO68EY/N+vvhh7/H/v37rD+M
      LD97/IccO9nHiWN/ZCySZYMnzb//r/9AcHKMIy88j722DX3iDH//3ScYH7nEC889S33ndmqd
      WZ78zcv89PvfZGQiyJuvv8r58Tg9WzcWfWDRkVMcevEMvd3zf/PLX/yS7Zuaeea3b7J184bF
      DZk5Hnv0nzh+6gxHjrxEx7Zd/PLxH9C9bx+2or0RlCv5a+hq6EKfeQEMDcPXTmS4DyPdhcPX
      wvToAIdfeAVJUbn/4x/nNz//AVmljpwJYHD4Fz8jrtuJaXre8OnXXsDVsY9P3NYLwInjxwHY
      tGMfBw9+DDOX4uvfeISH7tnPrhtu46EP3cx43+u8eOwUtnbo3N7Lhb7jHDx4EICvf/3rJN7b
      zS9+9RwmMh/86AMc+/1hovEMGcnJJx98gGee+iX3338/zzzzDLf1dgIw2Hecl988g5bJ8dF7
      7+Lo0aNs6d4MQPAdx/Xbp35MBgea5OTggx+1RJ8OMTwj8Zf/+iDp8BhjMzNgaDz1f39KLKbx
      Z39+kFOvPs+54QDVTZ20OpP4d9zOxdd+RcOOOyBwluqtN9JS5Vj+qylYMvKVb6tUGyMXz1DX
      uQu7meF8/1k27dzNk08f5hOf+nPuOdDFM0deZ3AizKceuh9VgsjQaSKOFj7x8Y9gu6I9PTI8
      zMauLtCiHDp0iL6BUXJX7FiyuVDIAnD6rVc4dOgn/PjpI9y4dydnLk2zY6OfRHicQ4cO8f1H
      vkvb1n0cfvIp7rr/k3zivtt48qnnGB0Z58Mff4jdrSqvvn2R0bFRAMYnxvP7iSR1Pvngn+K3
      JxhJqGzZsoWdm5qYmAy+67iGJ0L86YOfRI2OE8rMGnA1cu+t2/n2P/5PHn7s57jdbtAN7rrv
      4/S0Ojl77hxHzwb49Kc/TWb0bXTVx/GTZxkaHuTk26c5dXGcJhH8Zcu8UrxncwM///VRHvjM
      FwjkLvH0Cyf57Fdu5txRGYddwu3xkE5N4FRd+SpRJp3G5XIhyQ687ssXun3DBgYvXaKndRcP
      PPAAj37nO+h05783c0l07ABs33MTD9xzEzabHUkyOWWCKoOntpkHHngAWVZQFJkfffcsbpcD
      1XCTS6dwON24HDJuj5tJTUOWLD0bupHfz4Wzxzl3cYh4NEmbcflzgJwx/7hcbg+yBA6HDWNW
      y6HhPsLU8W//4i9JTp3nh8/+DrfdhUdVsDvs6JkUNtUDgMdlp6qtm9O/PoTTv5NsuB+1ql00
      tMqYedeme+cuBkbDtFc76Nm9m4lIEr9L4bYbdvDIoz/gsaeO8P5bD8wz0Lh5N+Hzr/P4Yz9k
      dDqV/7znpvejjRzn8R//hJ/85Md4mzdiBy6ceYvHHvsR3/r29/jAffdbTsgKdrsdSYJ0aBC1
      tnPWioTdbkdRLDfvvPO9PP69R3j00Z9x213vIxsP8sRjT/Dsa+e4qXcrtU544ieHGA5E835k
      NI1cLkcqpZHRNOxGkhP9QwALHtccta1dDB0/wiP/5wf84Gf/j9tvvXH+CfS20qhM8/jjjzOY
      8LCpqQYjPknb1h3YtChdO/cv/aoIVgxpLY8DPPy9h/nSF7+02m4I1jBrWgDj4+O0tLSsthuC
      NcyaFoBAcL2I9pmgohECEFQ0QgCCikYIQFDRiHSWNUYqlSKVSi3+jytMXV3dartwTQgBrDFS
      qRShUGi13XgXa1UAogokqGhECbCGOXXsdcKRCHbJRhgXjTXVDF84ibOqkQ/dfcdqu7cmECXA
      GmZiKkx7exPhkYt077mZYHCIUCSMJInLWiyiBFjDtDTXMzYZwlntp+/4KzQ2dFJT28BN+0UC
      XrEIAaxhenoLZ7AKikeUlYKKRghAUNEIAQgqGiEAQUUjBCCoaIQABBWNEICgohECEFQ0QgCC
      ikYIQFDRCAEIKhoxLYqgohElgKCiEQIQVDRCAIKKRghAUNEIAQgqGiEAQUUjBCCoaK7rmeBQ
      KISqqgv+j2EYyPL16awUNtarnXLypVR2VtKXRQWQScU58sobZMKjdPbcwEDfGe659z48qg1V
      VfF4PAv+PpfLYbNd37P3pbCxXu2Uky+lsrOSviy6F4fLi8+t0tjeSyCeobOjA6dNIpFIYBgG
      uVxuwd/rur7g98VQChvr1U45+VIqOyvpy3WlQiQSCVECrLKdcvKlVHZW0hfRCBZUNEIAgopG
      CEBQ0QgBCCoaIQBBRSMEIKhohAAEFY2YHl2w+mRTkJiE+CQkJlFiE6A4oHYj1GyEqjaQ7cuy
      66IEEItF8bpUxsaniESjbNzSjUcV2hEskZw2L9BJBEDPgM0JnibwNkHrDehqLTYMmBmCwBkY
      eNb6fVW7JYiaTrC7r90PQ4fpPhh7o7hcoFdee5ONDTbiykZkLSOCX7AwegYSUxCfuhzwehoU
      9XKgN+0BTyPYCiRT5nJgs0HDDmsD0LMQHYHIIIy+ZpUa3kZLENWd4KoDSVrYr8QUjP0RwpfA
      3w3b/qS4VIjTp0/jVjTCuVp8jixdmzaRTqcxDAOXy7XwudB1FEVZbBfLbmO92ikbX9IzMHoU
      KXwB2eFC8jSCtwnT04Th8mMqC2cNL9kX00ROB5FnhiByCSM5jWHzWqVDzUbwtaAbJoqZg8kT
      SJMnUNzVmC0H0Ks25sUicoHWuJ1V9cU0IXIJRl6x7vpt7yFXswWb/frq69d8TOkZq4SYuQSx
      cUzTtBYMbNoNzXvB/u6btajLCJaOnoWJYzD+JnhbYNMHwNNgfbdIdvCy4qyG5l5rA/RMGpvD
      ueBPhAAExZMKw8ir1l2/aQ/s/ZzVgC1X5MXDWwhAsDCmCeELVjXHMGDDzbDlw4s3ONcIQgCC
      wugZGH/L2qrbYcu94K5fba9KjhCAYD7JaauaMzMMLXth3xcKd1WuE4QABGCaSKHzMP4aIFvV
      nK0fWTfVnIUQAqhkTBOCfTD0OyRPE2z7KLhqV9urFUUIoBIxTQiegcHfW+kFu/4MQ3Ehl2A8
      Ya2x6BGbRo7zFwZRjBS65CIUCrJr7wGRDrEWMU0InIKhl630gd6D4PBa361m//0qsmgU57JZ
      pqam2LOji77hCKrdgdMmkUwmxbQoZWCnKBumiRI6A0Mvo/s6YeenLyeTzV6/NXdMJbKzqADs
      qovOjg1MBaZpaW5F1tMoioLb7SaRSBQ1ZF2KofpS2Fivdq5qwzRg8m0YfgXqNsPez2FbIIty
      TRxTie0UtZf29nagvRT+CFYC04CJ41Z3Zv02a8S2QB6MQDSC1xemAePHYPSole677wvlnapQ
      BggBrAcMHSbegpHXoLEH9n1xXQ9elRIhgLWMoSOPvwHjb0DjLtj/ZbA5VturNYUQwFrE0K1U
      5NHXMf09cODL1jO0giUjBLCWmFfV2QUHvoxpyqCIy3itiDO3FjB06wGUkaPQuHN+VadCB7BK
      hRBAOZPv1XkVGnpg/5dE47bECAGUI6Zh3fGHZwN/nwj85aLoJZK6WmsZGo8Qmwnnl0gSlJgr
      B7D828UdfwUoeomkybFRtux8L6HRi2KJpFLbMQ2YPIEy9hpmfTfG7s9cHsBagfNbbnbEEknL
      YKMs7WSz2KZPw/AfrJSFjluXPHJbdse0xq63qMesBoYOkyeQh18B/zbY+3mRq7NKCAGsJHrG
      mppv/Bg09GD0fhbZ6V1tryoaIYCVIJu0UpKDfdB6AA78M1Dsog+/DBACWE7SEeuxw9gobHgv
      dL0fJLEkQzkhBLAcxCdh8CXIxKHjNth2X0XMsLAWEQIoJZFBK/AlBTa+z3rgXFDWCAFcL6YJ
      wbMw/LI1R/3We8HtX22vBEUiBHCtGDpMHrcyM2s6YedDoFattleCJVL0EklOu0xoJkEwGKzs
      JZK0GNLYm9b0Io07Yd/nxWOHa5iil0jq8GWxd72PrDZWecGvRWHqFAROW1Nu+3vgwFdEHv46
      oKhcoPaWRpqr7STsEqbPi67r+SWS1m0uUHoGpk5C8CyKwwWNOzF6PoVpc6LrOqbJdffjr9lz
      s8x2RC7QMtgoyk4qnA96bC7rqauG7e+q4lRq3sxK2RG5QCtJcno26PusaQIbd8Gez4o05Aqh
      MgWQCFhBP91v9dw07rYas+LB8oqjMgSQS8PMEPL0BYheAmetFfQdt1k5OYKKZX0KID1jLeQW
      GYT4uHVnr+7ArN0EW+4pavE0QWWw9iPBNK0VwCOXrC0VArXaGpxqPQC+lnwCmpnLieAXzGPt
      RYORg+iIdXePDFqpxp5Ga3XwTfdY6Qgi8UxQJOUvgEwCKXwJYsMwMwKYUNVmBXzrDeBYuBtW
      IFiI8hKAoUN8AmaGrC0VtgLc22Y9M9t1t2i0CkpKUakQb506h1vOoMsupoMBbr79jtKkQ2jR
      2WAfhuioNTuCrwWqN8DmD1i9NZJk1d0rcP0qwfJTVCqEmdPI2mR0I0d9Xd21TYti5CA2hhwf
      RY6OQHoGw+HF8LZB7TbovBNk+zt/PN/GdbIe7ZSTL6WyU1ZLJAH09PSQTcVx1TRhZJIoioLH
      41l8iSTTRBo4jBIft/72tUJ1BzT1grMaGSj2AcFyWr6n3OyUky+lslNWSyRVVVVB1Wyuu+or
      fu+ShNm8H3yNovtRUJYs/xPaHhH8gvJFTFEgqGiEAAQVjRCAoKIRAhBUNEIAgopGCEBQ0QgB
      CCqaojvojzx/GENxEo3MiCWSBOuGoqNYtSvY69qoraoWSySVkZ1y8qVUdsS0KMtgY73aKSdf
      SmVnJX0RbQBBRVNQHlNjwwQjMbw19XS0Nq20TwLBilGwBIgl00Snx5EVMemrYH1TUAB6JkFz
      e1fJcrIFgnKloABypoOhC6dIp7Mr7Y9AsKIUvMWrSpauLb04vaIKJFjfFCwBFJuTQGCE6Exy
      pf0RCFaUq3aDSpJKvX8Jjz8KBGuQwq1cQ0dxOsikNHBbMzVc6D9F1rQTiYTZtfeASIUQrAsK
      RrHPqTIYnKG9Q8l/Nj4+iqu2E9XuwGmTSCaTIhWiDOyUky+lsrPq06Kobhe5TBbpijk2m5vb
      cNU2IOsaiqLgdrsXnxZlbidraJqMtWinnHwplZ1VnRYlE59haGiAls5d1M72BG3u3lkShwSC
      cqJgI1hW3XRs3EZbo5h4VrC+KSgA0zBQVQeGYay0PwLBilJQAM6qalQjQSAkxgEE65vC4wB6
      lplYlvr6qhV2RyBYWQoKIJNM4fCqxKKJlfZHIFhRCgpAQ8Ff40dGW2l/BIIVpfA4gKrS0dWE
      1yXWzRWsbwqWACffPslLv32OaEKUAIL1TcESoLm5ETkUxZQu6+PMG78nmPMQGh8S06II1g0F
      o3hifJKahiqGLk6ye2c7AKazltt27uT4m4hpUcrITjn5Uio7qz4tytmzZwiNXqRj752017uv
      +mMxLcrq2yknX0plZ9WnRUlGI7hrqslp4pFIwfqmoDz23XATKS2L2yUeiRSsbwoPhKXSOFw2
      EqIXSLDOKSiAVCTA888+x2Q4tdL+CAQrSkEBOJw2kvEkdqcYCBOsbwoKQFJUfD4vNq553lyB
      YE1QeGrEwDgT4TgG4nkAwfqmoABcNX7qvA5MpEJfCwTrhoLdoDabnfr6OtAvlwCDF/pJZ00i
      kYiYFkWwbihcBQqOc25wAkm5XAJcGLiAITvmTYsiEKx1Ct7GdYeHjiY/DttlfWzatBGbtwrF
      68xPixKLxUQu0CrbKSdfSmVn1ecFisRDNDdtpaHmcp5P5+bt7/o/WZbFvEBlYKecfCmVnZXy
      pXAjWK0imZokEk+XxAmBoFwpKI+NW7pX2g+BYFUQi+QJKhohAEFFIwQgqFhe6g8Uv1K8QLBe
      mIql+S9Pn8FlV4QABJWDbpj86OggTx4b468+3M32ersQgKAyODk6w3966hS9DQr/+S4/emKc
      sOwrXgDH3jhKTX0TA+cHuPn2O0QukGBNEIol+V8vXOD0pQn+1S3NbGurp7a2FqfTety36Ch2
      OuxMTMeor6sT06KUkZ1y8qVUdpZiwzRNstks2WwWTdPyWySR5shAlOcupfjnd2zmbz50O4py
      ecmvubgtWgB19Q201zVDNo2iKHg8HrFEUpnYKSdfSmVnzoau6/MCO5PJoGka2WwW0zSRZRmH
      w4GqqoTSBi8NRPjDxSiyzc4dWxs5dN9GvAvUVor2tLF1g/XGab++IxMIroJhGESjUaanp0mn
      rTQcRVFQVTUf5B6PB1VVsdutODwzHuPp0xO8PDBMvcfBPT1NfOP27dS6HUXNC7SsFXnTNIlG
      o9TU1CDLYshB8G4MwyASiRAKhdA0jaqqKhoaGvD5fPMWaZwjqxu8djHEs6cnOT4SYXtzFR/o
      aeJf3LEZ1a4U2MPCLHtLNpFIMDY2hsfjoaGhAa/Xu9y7LHs0TSMajZJOp7Hb7dhsNhRFKbit
      xxuHruv5oM9kMlRXV9PW1obL5QKs+vmVwR9LZznSH+DZ05OMhlPc1FXH/Xtb+epHe5ALiGQp
      FJwasViKnRpRURTi8TiBQIBkMkldXR1+vx+Ho7hZJ8pp2r6l2jFNk2QySSwWIxaLoWkaDocD
      n8+XL8Z1Xb/q9s512iRJmicQSZJwOp35zeFwXJNolvvc5HI5wuEw4XCYXC5HTU0NdXV1+d6Y
      d/5vIJHludNT/PbsJFnd5I7uBj7Q08TG+uIXbizmmFZEAFc6YRgGoVCIYDCIJEn4/X5qa2sX
      vGhrSQC6rhOPx4nFYsTjcXRdx+Vy4fP58Pl88y74tfhjmuY8gWQyGXRdJ51Ok06n0TQt3zi8
      UhhOpxNVVa96npfj3GSzWcLhMKFQCNM080GvqupVfx+IaXz1lyfRTZMP9jRz1/ZG6jzXNj1P
      WQrgSjRNIxgMEg6H81Ukj8fzrrpfOQsgk8nk7+6JRAJJkvB6vfmAX2h/yzmR7JWiWEwcqqpi
      s9nyJdKVFKqHL0QymSQajRIOhwGoq6ujtra2qNL+VyfG+KffX+SvP7iVm7c0Lmm/hSh7Acxh
      muaCVaRyEcBcdSYajZJIJPJ1+Llg93g8S6p+rNZMynNdi+8UyBzXERIoipIP+kKCKkQ4keGr
      T56izm3nr+/djkMuTVfqmhHAlRSqIvl8vqLbC6X0RdM04vE48XicRCKBaZq4XC7cbjfV1dU4
      nc4l3yGvx5/lsrGadp49Pck3XjjPX324m1s2+1fcl7LLZ5BlGb/fj9/vJ5PJEAgEGBsbQ1XV
      /DbXJ+xwOLDZbNcVhHPkcrl5wZ7NZlFVFa/XS11dHRs2bMjf3Ut1gSqZaCrLf3zqNHZF4odf
      eg9e5+qcz6L3OnLuDc5NyESnV26JJIfDQVtbG01NTRiGkR8FTKfTRKNRNE3LD2nLsjxPHHPv
      C/WKGIZBMpnMB3w6ncZms+H1evF4PDQ1NRVdfAuWzpH+AF9/tp+/uGcrd3Zff13/eig6imei
      UWxqK50dHauSC6QoSr7RVgjDMOYNlc/dxeeGzCVJQpZldF1HkqT8qGJzc/NVu+KW85hKZaec
      fFnMTkLL8d9+0086k+Phz+6n2mUveJ5XfYmkYllLSySZpkk6nV6wK3Al/SmVnXLyZSE7rwxM
      83eHz/Iv79zMB3c2r6ovV1IxFVlJkrDb7etyZLWcSWV0/vvhs0zHNR7+/I3X3Ke/XFSMAAQr
      zxuDIf72V2f44m1d/Elv62q7UxAhAEHJ0bI6/+PZfganE/zvz9xAg+/qI79XYhg6qXCYmckx
      FJudqsZmnNU1JenluxpCAIKScmIkwt/+up+D7+ngb+7dftXgNXSdZHiaeDBAfDpAKhIGScJd
      U4ertg5T1xk58Sap6AyK3Y7X34ivoQlvQyMO19WX7l0qQgCCkjAaTvEPvz1HMK7xjwf30VLt
      yn9n5HIkQtPEpwMkggFS0QiSJOGurcfrb6ClZzfu6lqkd4yzNO/YZf2dyRAPThEPTDLZf5ps
      KoXq8eJtaMLX2ISnvgHlGhvNFdMLtF7trLYvk9E033jhPBeDCf7NXVvZ0+JCm4mQmA4QDwZI
      R2eQFAVPXT3e+kY8/gZci1RrivFFS8SJTU0SD0wSnw5g6jru2jpLFA1NuGpq0XV97aVCLJeN
      9WpntXyZjmt868gAJ0cifHZXFbtcSaITYyBJeOsb8Pgb8NY34KyqXnId/pqyZA2DZCRELGCV
      FHNVKrvLhSwrSIqCrCiz7+X8Z6IKJFgSkWSG77x0gRff6Odj/jj/oVXFpxj4Gjto692PSeme
      LV4KkizjqfPjqfNDdw8AGS0NhoE5+1yFqesYuo5pzL0axQvgQv9JdMlFKBQUSyRVGHouy+To
      BD86Mc1LfVM8tM3F9x7cQm1bB+o7nvBbLDNgJZEVG7ZF4rT4h+Ib/PQNR8QSSRWAaZokwyEi
      o0NMDo9w6GyckzTypTu7+Xcf6UVR1s9gYtECmApM09LciqynxRJJZWSnJL6YJulEnNjUBJGR
      IbRYFHtVLb8agd9Ne/nM+/bytd5mFFnCNA1yuasvn1s2x1SkHdEIXuN2rmbDNE1y6TSZVJJs
      OkU2lbTep6z32VQS/Yqbl01VqW5uw9PSzlPn4vz0jREePNDOp27YgN22hId8shls9mtPdzA0
      jVR/P4rNhqOzE9l97X3+IheozDH0HLm5BtmVDTVDv6LBZsxruFnfXf4sl81i5rJkZgPbyN/1
      JOxOJ3aXC7vLjcPlwumrwtfQjGP2M+WKlO90JsuTxyd47ImzfGxPK0985Waci00zYpoQGYLB
      P8DgyxA4iyIpIMnW5m2E6vZ3b646jHSazMWLaOfPow0MoJ0fQI+EkRwq9s4OZEUhMzSMkUoi
      KTbsrS04Ojqwd3TgmN2U6urrvgaiBFghO1oinu8bjwcD5LQ0ss2GYrNZXXRzXXVz3XSKgiQr
      V7zK87rz5r4zIR/QDqcLeQl+ZXWD1y+GeO7sFH+8GOLe3S187pZO3I6r2DBNmD4Hl162gj58
      CWo7oPNW6LwF/N3k5vreTQPiUxhjfWhvvYT25otkzp1Dm1HQ1WZkKYfDNona6ELd3ovjwB3Y
      OndBdTs5TzM25+XGtZnLkR0fJzM4RHZoiMzspkejSJKErbFxvjg6O1Dq68U4wGrZ0RJx4sEA
      ieAU8ekAOU3D4fHgrW/E62/AU9+A3elclXMTTmZ4sS/A82cmmZhJc2NXHffsaGJ3ixeH4x0P
      ARk6TJ227u6Df4DYBPi3WsHeeSvUdMJsH7+Zy6GdO0fi7bfJXbiIduECRiKB7HGjbtqMumUz
      js2bUTdvRqmqsuxn0xAdgZn5mxkZRtLT1j6674W2A1aJUgDTMMhNTZEZmi+OXHAaTBPJZkN2
      uZA9bmT35U2aexUCuA47pomWTFjD9MEAiekAuUwG1e2xBoJmB4NsauGHeFbi3JgmDATiPH9m
      kpfOBbHLEnd2N3D3jiY21Lnn25FMGD82W6V5BdIRaOqxArHjFqhqyRvNTkyQOnGC1PETpM+c
      hlwOdes2HD07cG3rRt28CXmR2FjwmCTDKmn6fg1jb0LjDuj+CGy6E+yuxUzk7SiyjJFMztvM
      K94LASwBQ9eJTU0QHhkiGZoml82gzt7ZPflgLy7zsRT+XM1GVjd4/VKI589M8dZQmC6/h7t3
      NPG+rfV49RmIjr1rM2ZGkE0dWvdawd75XnDXW8edSJA6edIK9hMnyIWmsTe34OztxbWnF2dP
      D/LscS/LMZkmTJ6yxHDhRXBVw7YPW5v36o9UrslZIZbLxjXZMU1SMxHCo8NExobRNQ1fUwu+
      phaqm1uwOYoP9pL4s4CNSELjxf4gz52ZZOL8MW6Uz3J3U4J91UmUZMCqkyOBpx6qWsHXar3O
      bjlXAzanB1PX0c6fJ3XiBOnjJ9AuXkR2uXDu2oVrTy+u3l5s9fXLdkymaaIn0lbbSLXlq1jz
      iI1D32HoPwyZBGx+v1U6NGyf9/9CANdgJ6eliYyNEhm17vLO6hpq2jZQ07Yhn4ZbUn8UBXJp
      yMRBi4E2+5p5x6sWh8zl76Oazol0I2+lmng13oStuoX3+2e4u2aSDdU2qGqzqixVreBpBFmx
      epRiMXLhMPo7tszUFJlz5zGzGdQtW3D17sG1pxdHV1c+S7PoY1qoSqYbmOksZiqLmc5Aau59
      FtOYFalNQpIkzKzVoyXZFSSXA8ntuOLVjmRTLAEMvAB9z0CwH9pvtNoNHbeQMxdJyzBN/j8f
      plNFGZxyyAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='WorldData' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='WorldGDPDashboard' width='192'>
      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
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
